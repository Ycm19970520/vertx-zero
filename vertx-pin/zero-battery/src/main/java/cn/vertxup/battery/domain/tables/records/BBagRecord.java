/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.battery.domain.tables.records;


import cn.vertxup.battery.domain.tables.BBag;
import cn.vertxup.battery.domain.tables.interfaces.IBBag;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BBagRecord extends UpdatableRecordImpl<BBagRecord> implements VertxPojo, Record17<String, String, String, String, String, String, Long, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IBBag {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.KEY</code>. 「key」- 模块主键
     */
    @Override
    public BBagRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.KEY</code>. 「key」- 模块主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.NAME</code>. 「name」- 模块名称
     */
    @Override
    public BBagRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.NAME</code>. 「name」- 模块名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.NAME_ABBR</code>. 「nameAbbr」- 模块缩写
     */
    @Override
    public BBagRecord setNameAbbr(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.NAME_ABBR</code>. 「nameAbbr」- 模块缩写
     */
    @Override
    public String getNameAbbr() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.NAME_FULL</code>. 「nameFull」- 模块全名
     */
    @Override
    public BBagRecord setNameFull(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.NAME_FULL</code>. 「nameFull」- 模块全名
     */
    @Override
    public String getNameFull() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.UI_ICON</code>. 「uiIcon」- 模块图标
     */
    @Override
    public BBagRecord setUiIcon(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.UI_ICON</code>. 「uiIcon」- 模块图标
     */
    @Override
    public String getUiIcon() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.UI_STYLE</code>. 「uiStyle」- 模块风格
     */
    @Override
    public BBagRecord setUiStyle(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.UI_STYLE</code>. 「uiStyle」- 模块风格
     */
    @Override
    public String getUiStyle() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.UI_SORT</code>. 「uiSort」- 模块排序
     */
    @Override
    public BBagRecord setUiSort(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.UI_SORT</code>. 「uiSort」- 模块排序
     */
    @Override
    public Long getUiSort() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.APP_ID</code>. 「appId」- 关联的应用程序ID
     */
    @Override
    public BBagRecord setAppId(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.APP_ID</code>. 「appId」- 关联的应用程序ID
     */
    @Override
    public String getAppId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.PARENT_ID</code>. 「parentId」- 父包ID
     */
    @Override
    public BBagRecord setParentId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.PARENT_ID</code>. 「parentId」- 父包ID
     */
    @Override
    public String getParentId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public BBagRecord setActive(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public BBagRecord setSigma(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public BBagRecord setMetadata(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public BBagRecord setLanguage(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public BBagRecord setCreatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public BBagRecord setCreatedBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public BBagRecord setUpdatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.B_BAG.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public BBagRecord setUpdatedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.B_BAG.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<String, String, String, String, String, String, Long, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<String, String, String, String, String, String, Long, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return BBag.B_BAG.KEY;
    }

    @Override
    public Field<String> field2() {
        return BBag.B_BAG.NAME;
    }

    @Override
    public Field<String> field3() {
        return BBag.B_BAG.NAME_ABBR;
    }

    @Override
    public Field<String> field4() {
        return BBag.B_BAG.NAME_FULL;
    }

    @Override
    public Field<String> field5() {
        return BBag.B_BAG.UI_ICON;
    }

    @Override
    public Field<String> field6() {
        return BBag.B_BAG.UI_STYLE;
    }

    @Override
    public Field<Long> field7() {
        return BBag.B_BAG.UI_SORT;
    }

    @Override
    public Field<String> field8() {
        return BBag.B_BAG.APP_ID;
    }

    @Override
    public Field<String> field9() {
        return BBag.B_BAG.PARENT_ID;
    }

    @Override
    public Field<Boolean> field10() {
        return BBag.B_BAG.ACTIVE;
    }

    @Override
    public Field<String> field11() {
        return BBag.B_BAG.SIGMA;
    }

    @Override
    public Field<String> field12() {
        return BBag.B_BAG.METADATA;
    }

    @Override
    public Field<String> field13() {
        return BBag.B_BAG.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return BBag.B_BAG.CREATED_AT;
    }

    @Override
    public Field<String> field15() {
        return BBag.B_BAG.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return BBag.B_BAG.UPDATED_AT;
    }

    @Override
    public Field<String> field17() {
        return BBag.B_BAG.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getNameAbbr();
    }

    @Override
    public String component4() {
        return getNameFull();
    }

    @Override
    public String component5() {
        return getUiIcon();
    }

    @Override
    public String component6() {
        return getUiStyle();
    }

    @Override
    public Long component7() {
        return getUiSort();
    }

    @Override
    public String component8() {
        return getAppId();
    }

    @Override
    public String component9() {
        return getParentId();
    }

    @Override
    public Boolean component10() {
        return getActive();
    }

    @Override
    public String component11() {
        return getSigma();
    }

    @Override
    public String component12() {
        return getMetadata();
    }

    @Override
    public String component13() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component14() {
        return getCreatedAt();
    }

    @Override
    public String component15() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component16() {
        return getUpdatedAt();
    }

    @Override
    public String component17() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getNameAbbr();
    }

    @Override
    public String value4() {
        return getNameFull();
    }

    @Override
    public String value5() {
        return getUiIcon();
    }

    @Override
    public String value6() {
        return getUiStyle();
    }

    @Override
    public Long value7() {
        return getUiSort();
    }

    @Override
    public String value8() {
        return getAppId();
    }

    @Override
    public String value9() {
        return getParentId();
    }

    @Override
    public Boolean value10() {
        return getActive();
    }

    @Override
    public String value11() {
        return getSigma();
    }

    @Override
    public String value12() {
        return getMetadata();
    }

    @Override
    public String value13() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value14() {
        return getCreatedAt();
    }

    @Override
    public String value15() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value16() {
        return getUpdatedAt();
    }

    @Override
    public String value17() {
        return getUpdatedBy();
    }

    @Override
    public BBagRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public BBagRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public BBagRecord value3(String value) {
        setNameAbbr(value);
        return this;
    }

    @Override
    public BBagRecord value4(String value) {
        setNameFull(value);
        return this;
    }

    @Override
    public BBagRecord value5(String value) {
        setUiIcon(value);
        return this;
    }

    @Override
    public BBagRecord value6(String value) {
        setUiStyle(value);
        return this;
    }

    @Override
    public BBagRecord value7(Long value) {
        setUiSort(value);
        return this;
    }

    @Override
    public BBagRecord value8(String value) {
        setAppId(value);
        return this;
    }

    @Override
    public BBagRecord value9(String value) {
        setParentId(value);
        return this;
    }

    @Override
    public BBagRecord value10(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public BBagRecord value11(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public BBagRecord value12(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public BBagRecord value13(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public BBagRecord value14(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public BBagRecord value15(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public BBagRecord value16(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public BBagRecord value17(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public BBagRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Long value7, String value8, String value9, Boolean value10, String value11, String value12, String value13, LocalDateTime value14, String value15, LocalDateTime value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IBBag from) {
        setKey(from.getKey());
        setName(from.getName());
        setNameAbbr(from.getNameAbbr());
        setNameFull(from.getNameFull());
        setUiIcon(from.getUiIcon());
        setUiStyle(from.getUiStyle());
        setUiSort(from.getUiSort());
        setAppId(from.getAppId());
        setParentId(from.getParentId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IBBag> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BBagRecord
     */
    public BBagRecord() {
        super(BBag.B_BAG);
    }

    /**
     * Create a detached, initialised BBagRecord
     */
    public BBagRecord(String key, String name, String nameAbbr, String nameFull, String uiIcon, String uiStyle, Long uiSort, String appId, String parentId, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(BBag.B_BAG);

        setKey(key);
        setName(name);
        setNameAbbr(nameAbbr);
        setNameFull(nameFull);
        setUiIcon(uiIcon);
        setUiStyle(uiStyle);
        setUiSort(uiSort);
        setAppId(appId);
        setParentId(parentId);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised BBagRecord
     */
    public BBagRecord(cn.vertxup.battery.domain.tables.pojos.BBag value) {
        super(BBag.B_BAG);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setNameAbbr(value.getNameAbbr());
            setNameFull(value.getNameFull());
            setUiIcon(value.getUiIcon());
            setUiStyle(value.getUiStyle());
            setUiSort(value.getUiSort());
            setAppId(value.getAppId());
            setParentId(value.getParentId());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public BBagRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
