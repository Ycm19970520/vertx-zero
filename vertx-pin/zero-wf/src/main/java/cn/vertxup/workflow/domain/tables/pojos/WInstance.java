/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.pojos;


import cn.vertxup.workflow.domain.tables.interfaces.IWInstance;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WInstance implements VertxPojo, IWInstance {

    private static final long serialVersionUID = 1L;

    private String        key;
    private String        code;
    private String        name;
    private String        todoId;
    private String        instanceId;
    private String        instanceRootId;
    private String        instanceCaseId;
    private String        tenantId;
    private String        pDefinitionId;
    private String        pExecutionId;
    private String        pBusinessKey;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public WInstance() {}

    public WInstance(IWInstance value) {
        this.key = value.getKey();
        this.code = value.getCode();
        this.name = value.getName();
        this.todoId = value.getTodoId();
        this.instanceId = value.getInstanceId();
        this.instanceRootId = value.getInstanceRootId();
        this.instanceCaseId = value.getInstanceCaseId();
        this.tenantId = value.getTenantId();
        this.pDefinitionId = value.getPDefinitionId();
        this.pExecutionId = value.getPExecutionId();
        this.pBusinessKey = value.getPBusinessKey();
        this.active = value.getActive();
        this.sigma = value.getSigma();
        this.metadata = value.getMetadata();
        this.language = value.getLanguage();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public WInstance(
        String        key,
        String        code,
        String        name,
        String        todoId,
        String        instanceId,
        String        instanceRootId,
        String        instanceCaseId,
        String        tenantId,
        String        pDefinitionId,
        String        pExecutionId,
        String        pBusinessKey,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.code = code;
        this.name = name;
        this.todoId = todoId;
        this.instanceId = instanceId;
        this.instanceRootId = instanceRootId;
        this.instanceCaseId = instanceCaseId;
        this.tenantId = tenantId;
        this.pDefinitionId = pDefinitionId;
        this.pExecutionId = pExecutionId;
        this.pBusinessKey = pBusinessKey;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

        public WInstance(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.KEY</code>. 「key」- 流程定义主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.KEY</code>. 「key」- 流程定义主键
     */
    @Override
    public WInstance setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.CODE</code>. 「code」- 流程定义编号（系统可用）
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.CODE</code>. 「code」- 流程定义编号（系统可用）
     */
    @Override
    public WInstance setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.NAME</code>. 「name」- 流程标题
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.NAME</code>. 「name」- 流程标题
     */
    @Override
    public WInstance setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.TODO_ID</code>. 「todoId」- 绑定TodoId
     */
    @Override
    public String getTodoId() {
        return this.todoId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.TODO_ID</code>. 「todoId」- 绑定TodoId
     */
    @Override
    public WInstance setTodoId(String todoId) {
        this.todoId = todoId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.INSTANCE_ID</code>. 「instanceId」-
     * 实例ID（查询Task专用）：getProcessInstanceId
     */
    @Override
    public String getInstanceId() {
        return this.instanceId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.INSTANCE_ID</code>. 「instanceId」-
     * 实例ID（查询Task专用）：getProcessInstanceId
     */
    @Override
    public WInstance setInstanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.INSTANCE_ROOT_ID</code>.
     * 「instanceRootId」- 根实例ID：getRootProcessInstanceId
     */
    @Override
    public String getInstanceRootId() {
        return this.instanceRootId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.INSTANCE_ROOT_ID</code>.
     * 「instanceRootId」- 根实例ID：getRootProcessInstanceId
     */
    @Override
    public WInstance setInstanceRootId(String instanceRootId) {
        this.instanceRootId = instanceRootId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.INSTANCE_CASE_ID</code>.
     * 「instanceCaseId」- getCaseInstanceId
     */
    @Override
    public String getInstanceCaseId() {
        return this.instanceCaseId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.INSTANCE_CASE_ID</code>.
     * 「instanceCaseId」- getCaseInstanceId
     */
    @Override
    public WInstance setInstanceCaseId(String instanceCaseId) {
        this.instanceCaseId = instanceCaseId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.TENANT_ID</code>. 「tenantId」- 租户ID
     */
    @Override
    public String getTenantId() {
        return this.tenantId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.TENANT_ID</code>. 「tenantId」- 租户ID
     */
    @Override
    public WInstance setTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.P_DEFINITION_ID</code>.
     * 「pDefinitionId」- 定义ID, getProcessDefinitionId
     */
    @Override
    public String getPDefinitionId() {
        return this.pDefinitionId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.P_DEFINITION_ID</code>.
     * 「pDefinitionId」- 定义ID, getProcessDefinitionId
     */
    @Override
    public WInstance setPDefinitionId(String pDefinitionId) {
        this.pDefinitionId = pDefinitionId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.P_EXECUTION_ID</code>.
     * 「pExecutionId」- 任务执行ID（查询Task专用）- getId
     */
    @Override
    public String getPExecutionId() {
        return this.pExecutionId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.P_EXECUTION_ID</code>.
     * 「pExecutionId」- 任务执行ID（查询Task专用）- getId
     */
    @Override
    public WInstance setPExecutionId(String pExecutionId) {
        this.pExecutionId = pExecutionId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.P_BUSINESS_KEY</code>.
     * 「pBusinessId」- getBusinessKey
     */
    @Override
    public String getPBusinessKey() {
        return this.pBusinessKey;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.P_BUSINESS_KEY</code>.
     * 「pBusinessId」- getBusinessKey
     */
    @Override
    public WInstance setPBusinessKey(String pBusinessKey) {
        this.pBusinessKey = pBusinessKey;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public WInstance setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public WInstance setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public WInstance setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public WInstance setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public WInstance setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public WInstance setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public WInstance setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_INSTANCE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_INSTANCE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public WInstance setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WInstance (");

        sb.append(key);
        sb.append(", ").append(code);
        sb.append(", ").append(name);
        sb.append(", ").append(todoId);
        sb.append(", ").append(instanceId);
        sb.append(", ").append(instanceRootId);
        sb.append(", ").append(instanceCaseId);
        sb.append(", ").append(tenantId);
        sb.append(", ").append(pDefinitionId);
        sb.append(", ").append(pExecutionId);
        sb.append(", ").append(pBusinessKey);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWInstance from) {
        setKey(from.getKey());
        setCode(from.getCode());
        setName(from.getName());
        setTodoId(from.getTodoId());
        setInstanceId(from.getInstanceId());
        setInstanceRootId(from.getInstanceRootId());
        setInstanceCaseId(from.getInstanceCaseId());
        setTenantId(from.getTenantId());
        setPDefinitionId(from.getPDefinitionId());
        setPExecutionId(from.getPExecutionId());
        setPBusinessKey(from.getPBusinessKey());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IWInstance> E into(E into) {
        into.from(this);
        return into;
    }
}
