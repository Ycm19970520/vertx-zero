/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.records;


import cn.vertxup.workflow.domain.tables.TAssetKo;
import cn.vertxup.workflow.domain.tables.interfaces.ITAssetKo;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TAssetKoRecord extends UpdatableRecordImpl<TAssetKoRecord> implements VertxPojo, Record2<String, String>, ITAssetKo {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.T_ASSET_KO.KEY</code>. 「key」-
     * 单据主键（主单主键Join模式）
     */
    @Override
    public TAssetKoRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_ASSET_KO.KEY</code>. 「key」-
     * 单据主键（主单主键Join模式）
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.T_ASSET_KO.COMMENT_KO</code>. 「commentKo」-
     * 报废原因
     */
    @Override
    public TAssetKoRecord setCommentKo(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_ASSET_KO.COMMENT_KO</code>. 「commentKo」-
     * 报废原因
     */
    @Override
    public String getCommentKo() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TAssetKo.T_ASSET_KO.KEY;
    }

    @Override
    public Field<String> field2() {
        return TAssetKo.T_ASSET_KO.COMMENT_KO;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getCommentKo();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getCommentKo();
    }

    @Override
    public TAssetKoRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public TAssetKoRecord value2(String value) {
        setCommentKo(value);
        return this;
    }

    @Override
    public TAssetKoRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITAssetKo from) {
        setKey(from.getKey());
        setCommentKo(from.getCommentKo());
    }

    @Override
    public <E extends ITAssetKo> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TAssetKoRecord
     */
    public TAssetKoRecord() {
        super(TAssetKo.T_ASSET_KO);
    }

    /**
     * Create a detached, initialised TAssetKoRecord
     */
    public TAssetKoRecord(String key, String commentKo) {
        super(TAssetKo.T_ASSET_KO);

        setKey(key);
        setCommentKo(commentKo);
    }

    /**
     * Create a detached, initialised TAssetKoRecord
     */
    public TAssetKoRecord(cn.vertxup.workflow.domain.tables.pojos.TAssetKo value) {
        super(TAssetKo.T_ASSET_KO);

        if (value != null) {
            setKey(value.getKey());
            setCommentKo(value.getCommentKo());
        }
    }

    public TAssetKoRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
