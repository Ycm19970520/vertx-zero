/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.daos;


import cn.vertxup.workflow.domain.tables.WInstance;
import cn.vertxup.workflow.domain.tables.records.WInstanceRecord;

import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;

import java.time.LocalDateTime;
import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WInstanceDao extends AbstractVertxDAO<WInstanceRecord, cn.vertxup.workflow.domain.tables.pojos.WInstance, String, Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>>, Future<cn.vertxup.workflow.domain.tables.pojos.WInstance>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<WInstanceRecord,cn.vertxup.workflow.domain.tables.pojos.WInstance,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     *      * @param vertx the vertx instance
     */
        public WInstanceDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(WInstance.W_INSTANCE, cn.vertxup.workflow.domain.tables.pojos.WInstance.class, new JDBCClassicQueryExecutor<WInstanceRecord,cn.vertxup.workflow.domain.tables.pojos.WInstance,String>(configuration,cn.vertxup.workflow.domain.tables.pojos.WInstance.class,vertx));
        }

        @Override
        protected String getId(cn.vertxup.workflow.domain.tables.pojos.WInstance object) {
                return object.getKey();
        }

        /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByCode(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.CODE.in(values));
        }

        /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByCode(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.CODE.in(values),limit);
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByName(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.NAME.in(values));
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByName(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.NAME.in(values),limit);
        }

        /**
     * Find records that have <code>TODO_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByTodoId(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.TODO_ID.in(values));
        }

        /**
     * Find records that have <code>TODO_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByTodoId(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.TODO_ID.in(values),limit);
        }

        /**
     * Find records that have <code>INSTANCE_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByInstanceId(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.INSTANCE_ID.in(values));
        }

        /**
     * Find records that have <code>INSTANCE_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByInstanceId(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.INSTANCE_ID.in(values),limit);
        }

        /**
     * Find records that have <code>INSTANCE_ROOT_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByInstanceRootId(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.INSTANCE_ROOT_ID.in(values));
        }

        /**
     * Find records that have <code>INSTANCE_ROOT_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByInstanceRootId(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.INSTANCE_ROOT_ID.in(values),limit);
        }

        /**
     * Find records that have <code>INSTANCE_CASE_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByInstanceCaseId(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.INSTANCE_CASE_ID.in(values));
        }

        /**
     * Find records that have <code>INSTANCE_CASE_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByInstanceCaseId(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.INSTANCE_CASE_ID.in(values),limit);
        }

        /**
     * Find records that have <code>TENANT_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByTenantId(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.TENANT_ID.in(values));
        }

        /**
     * Find records that have <code>TENANT_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByTenantId(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.TENANT_ID.in(values),limit);
        }

        /**
     * Find records that have <code>P_DEFINITION_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByPDefinitionId(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.P_DEFINITION_ID.in(values));
        }

        /**
     * Find records that have <code>P_DEFINITION_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByPDefinitionId(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.P_DEFINITION_ID.in(values),limit);
        }

        /**
     * Find records that have <code>P_EXECUTION_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByPExecutionId(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.P_EXECUTION_ID.in(values));
        }

        /**
     * Find records that have <code>P_EXECUTION_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByPExecutionId(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.P_EXECUTION_ID.in(values),limit);
        }

        /**
     * Find records that have <code>P_BUSINESS_KEY IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByPBusinessKey(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.P_BUSINESS_KEY.in(values));
        }

        /**
     * Find records that have <code>P_BUSINESS_KEY IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByPBusinessKey(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.P_BUSINESS_KEY.in(values),limit);
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByActive(Collection<Boolean> values) {
                return findManyByCondition(WInstance.W_INSTANCE.ACTIVE.in(values));
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByActive(Collection<Boolean> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.ACTIVE.in(values),limit);
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyBySigma(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.SIGMA.in(values));
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyBySigma(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.SIGMA.in(values),limit);
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByMetadata(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.METADATA.in(values));
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByMetadata(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.METADATA.in(values),limit);
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByLanguage(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.LANGUAGE.in(values));
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByLanguage(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.LANGUAGE.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByCreatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(WInstance.W_INSTANCE.CREATED_AT.in(values));
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByCreatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.CREATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByCreatedBy(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.CREATED_BY.in(values));
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByCreatedBy(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.CREATED_BY.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByUpdatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(WInstance.W_INSTANCE.UPDATED_AT.in(values));
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByUpdatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.UPDATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByUpdatedBy(Collection<String> values) {
                return findManyByCondition(WInstance.W_INSTANCE.UPDATED_BY.in(values));
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.workflow.domain.tables.pojos.WInstance>> findManyByUpdatedBy(Collection<String> values, int limit) {
                return findManyByCondition(WInstance.W_INSTANCE.UPDATED_BY.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<WInstanceRecord,cn.vertxup.workflow.domain.tables.pojos.WInstance,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<WInstanceRecord,cn.vertxup.workflow.domain.tables.pojos.WInstance,String>) super.queryExecutor();
        }
}
