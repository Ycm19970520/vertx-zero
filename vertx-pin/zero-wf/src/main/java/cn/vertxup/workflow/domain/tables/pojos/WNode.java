/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.pojos;


import cn.vertxup.workflow.domain.tables.interfaces.IWNode;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WNode implements VertxPojo, IWNode {

    private static final long serialVersionUID = 1L;

    private String        key;
    private String        name;
    private String        code;
    private String        type;
    private String        flowId;
    private String        formCode;
    private String        formRule;
    private String        modelId;
    private String        modelKey;
    private String        entityId;
    private String        entityKey;
    private String        ruleRole;
    private String        ruleGroup;
    private String        ruleUser;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public WNode() {}

    public WNode(IWNode value) {
        this.key = value.getKey();
        this.name = value.getName();
        this.code = value.getCode();
        this.type = value.getType();
        this.flowId = value.getFlowId();
        this.formCode = value.getFormCode();
        this.formRule = value.getFormRule();
        this.modelId = value.getModelId();
        this.modelKey = value.getModelKey();
        this.entityId = value.getEntityId();
        this.entityKey = value.getEntityKey();
        this.ruleRole = value.getRuleRole();
        this.ruleGroup = value.getRuleGroup();
        this.ruleUser = value.getRuleUser();
        this.active = value.getActive();
        this.sigma = value.getSigma();
        this.metadata = value.getMetadata();
        this.language = value.getLanguage();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public WNode(
        String        key,
        String        name,
        String        code,
        String        type,
        String        flowId,
        String        formCode,
        String        formRule,
        String        modelId,
        String        modelKey,
        String        entityId,
        String        entityKey,
        String        ruleRole,
        String        ruleGroup,
        String        ruleUser,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.name = name;
        this.code = code;
        this.type = type;
        this.flowId = flowId;
        this.formCode = formCode;
        this.formRule = formRule;
        this.modelId = modelId;
        this.modelKey = modelKey;
        this.entityId = entityId;
        this.entityKey = entityKey;
        this.ruleRole = ruleRole;
        this.ruleGroup = ruleGroup;
        this.ruleUser = ruleUser;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

        public WNode(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.KEY</code>. 「key」- 节点定义主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.KEY</code>. 「key」- 节点定义主键
     */
    @Override
    public WNode setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.NAME</code>. 「name」- 节点定义名称
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.NAME</code>. 「name」- 节点定义名称
     */
    @Override
    public WNode setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.CODE</code>. 「code」- 节点定义编号（系统可用）
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.CODE</code>. 「code」- 节点定义编号（系统可用）
     */
    @Override
    public WNode setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.TYPE</code>. 「type」- 节点类型，START | END
     * | MIDDLE | DECISION
     */
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.TYPE</code>. 「type」- 节点类型，START | END
     * | MIDDLE | DECISION
     */
    @Override
    public WNode setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.FLOW_ID</code>. 「flowId」- 所属流程图
     */
    @Override
    public String getFlowId() {
        return this.flowId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.FLOW_ID</code>. 「flowId」- 所属流程图
     */
    @Override
    public WNode setFlowId(String flowId) {
        this.flowId = flowId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.FORM_CODE</code>. 「formCode」- 表单代码
     */
    @Override
    public String getFormCode() {
        return this.formCode;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.FORM_CODE</code>. 「formCode」- 表单代码
     */
    @Override
    public WNode setFormCode(String formCode) {
        this.formCode = formCode;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.FORM_RULE</code>. 「formRule」- 动态表单规则
     */
    @Override
    public String getFormRule() {
        return this.formRule;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.FORM_RULE</code>. 「formRule」- 动态表单规则
     */
    @Override
    public WNode setFormRule(String formRule) {
        this.formRule = formRule;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return this.modelId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public WNode setModelId(String modelId) {
        this.modelId = modelId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return this.modelKey;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public WNode setModelKey(String modelKey) {
        this.modelKey = modelKey;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.ENTITY_ID</code>. 「entityId」- 主实体
     */
    @Override
    public String getEntityId() {
        return this.entityId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.ENTITY_ID</code>. 「entityId」- 主实体
     */
    @Override
    public WNode setEntityId(String entityId) {
        this.entityId = entityId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.ENTITY_KEY</code>. 「entityKey」- 主实体主键
     */
    @Override
    public String getEntityKey() {
        return this.entityKey;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.ENTITY_KEY</code>. 「entityKey」- 主实体主键
     */
    @Override
    public WNode setEntityKey(String entityKey) {
        this.entityKey = entityKey;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.RULE_ROLE</code>. 「ruleRole」- 角色规则
     */
    @Override
    public String getRuleRole() {
        return this.ruleRole;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.RULE_ROLE</code>. 「ruleRole」- 角色规则
     */
    @Override
    public WNode setRuleRole(String ruleRole) {
        this.ruleRole = ruleRole;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.RULE_GROUP</code>. 「ruleGroup」- 组规则
     */
    @Override
    public String getRuleGroup() {
        return this.ruleGroup;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.RULE_GROUP</code>. 「ruleGroup」- 组规则
     */
    @Override
    public WNode setRuleGroup(String ruleGroup) {
        this.ruleGroup = ruleGroup;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.RULE_USER</code>. 「ruleUser」- 用户规则规则
     */
    @Override
    public String getRuleUser() {
        return this.ruleUser;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.RULE_USER</code>. 「ruleUser」- 用户规则规则
     */
    @Override
    public WNode setRuleUser(String ruleUser) {
        this.ruleUser = ruleUser;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public WNode setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public WNode setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public WNode setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public WNode setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public WNode setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public WNode setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public WNode setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public WNode setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WNode (");

        sb.append(key);
        sb.append(", ").append(name);
        sb.append(", ").append(code);
        sb.append(", ").append(type);
        sb.append(", ").append(flowId);
        sb.append(", ").append(formCode);
        sb.append(", ").append(formRule);
        sb.append(", ").append(modelId);
        sb.append(", ").append(modelKey);
        sb.append(", ").append(entityId);
        sb.append(", ").append(entityKey);
        sb.append(", ").append(ruleRole);
        sb.append(", ").append(ruleGroup);
        sb.append(", ").append(ruleUser);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWNode from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setType(from.getType());
        setFlowId(from.getFlowId());
        setFormCode(from.getFormCode());
        setFormRule(from.getFormRule());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setEntityId(from.getEntityId());
        setEntityKey(from.getEntityKey());
        setRuleRole(from.getRuleRole());
        setRuleGroup(from.getRuleGroup());
        setRuleUser(from.getRuleUser());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IWNode> E into(E into) {
        into.from(this);
        return into;
    }
}
