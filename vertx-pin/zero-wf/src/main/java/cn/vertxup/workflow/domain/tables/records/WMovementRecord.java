/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.records;


import cn.vertxup.workflow.domain.tables.WMovement;
import cn.vertxup.workflow.domain.tables.interfaces.IWMovement;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WMovementRecord extends UpdatableRecordImpl<WMovementRecord> implements VertxPojo, Record18<String, String, String, String, String, String, String, String, LocalDateTime, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IWMovement {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.KEY</code>. 「key」- 轨迹主键
     */
    @Override
    public WMovementRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.KEY</code>. 「key」- 轨迹主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.CODE</code>. 「code」- 轨迹编号（系统可用）
     */
    @Override
    public WMovementRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.CODE</code>. 「code」- 轨迹编号（系统可用）
     */
    @Override
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.NAME</code>. 「name」- 流程定义名称
     */
    @Override
    public WMovementRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.NAME</code>. 「name」- 流程定义名称
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.SOURCE_KEY</code>. 「sourceKey」
     */
    @Override
    public WMovementRecord setSourceKey(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.SOURCE_KEY</code>. 「sourceKey」
     */
    @Override
    public String getSourceKey() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.TARGET_KEY</code>. 「targetKey」
     */
    @Override
    public WMovementRecord setTargetKey(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.TARGET_KEY</code>. 「targetKey」
     */
    @Override
    public String getTargetKey() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.FLOW_INSTANCE_ID</code>.
     * 「flowInstanceId」- 所属流程实例ID
     */
    @Override
    public WMovementRecord setFlowInstanceId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.FLOW_INSTANCE_ID</code>.
     * 「flowInstanceId」- 所属流程实例ID
     */
    @Override
    public String getFlowInstanceId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.MOVE_NAME</code>. 「moveName」-
     * 执行人姓名
     */
    @Override
    public WMovementRecord setMoveName(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.MOVE_NAME</code>. 「moveName」-
     * 执行人姓名
     */
    @Override
    public String getMoveName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.MOVE_BY</code>. 「moveBy」- 执行人员
     */
    @Override
    public WMovementRecord setMoveBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.MOVE_BY</code>. 「moveBy」- 执行人员
     */
    @Override
    public String getMoveBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.MOVE_AT</code>. 「moveAt」- 执行时间
     */
    @Override
    public WMovementRecord setMoveAt(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.MOVE_AT</code>. 「moveAt」- 执行时间
     */
    @Override
    public LocalDateTime getMoveAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.MOVE_COMPONENT</code>.
     * 「moveComponent」- 执行扩展组件
     */
    @Override
    public WMovementRecord setMoveComponent(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.MOVE_COMPONENT</code>.
     * 「moveComponent」- 执行扩展组件
     */
    @Override
    public String getMoveComponent() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public WMovementRecord setActive(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public WMovementRecord setSigma(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public WMovementRecord setMetadata(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public WMovementRecord setLanguage(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public WMovementRecord setCreatedAt(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public WMovementRecord setCreatedBy(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public WMovementRecord setUpdatedAt(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_MOVEMENT.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public WMovementRecord setUpdatedBy(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_MOVEMENT.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<String, String, String, String, String, String, String, String, LocalDateTime, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<String, String, String, String, String, String, String, String, LocalDateTime, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return WMovement.W_MOVEMENT.KEY;
    }

    @Override
    public Field<String> field2() {
        return WMovement.W_MOVEMENT.CODE;
    }

    @Override
    public Field<String> field3() {
        return WMovement.W_MOVEMENT.NAME;
    }

    @Override
    public Field<String> field4() {
        return WMovement.W_MOVEMENT.SOURCE_KEY;
    }

    @Override
    public Field<String> field5() {
        return WMovement.W_MOVEMENT.TARGET_KEY;
    }

    @Override
    public Field<String> field6() {
        return WMovement.W_MOVEMENT.FLOW_INSTANCE_ID;
    }

    @Override
    public Field<String> field7() {
        return WMovement.W_MOVEMENT.MOVE_NAME;
    }

    @Override
    public Field<String> field8() {
        return WMovement.W_MOVEMENT.MOVE_BY;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return WMovement.W_MOVEMENT.MOVE_AT;
    }

    @Override
    public Field<String> field10() {
        return WMovement.W_MOVEMENT.MOVE_COMPONENT;
    }

    @Override
    public Field<Boolean> field11() {
        return WMovement.W_MOVEMENT.ACTIVE;
    }

    @Override
    public Field<String> field12() {
        return WMovement.W_MOVEMENT.SIGMA;
    }

    @Override
    public Field<String> field13() {
        return WMovement.W_MOVEMENT.METADATA;
    }

    @Override
    public Field<String> field14() {
        return WMovement.W_MOVEMENT.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return WMovement.W_MOVEMENT.CREATED_AT;
    }

    @Override
    public Field<String> field16() {
        return WMovement.W_MOVEMENT.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return WMovement.W_MOVEMENT.UPDATED_AT;
    }

    @Override
    public Field<String> field18() {
        return WMovement.W_MOVEMENT.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getSourceKey();
    }

    @Override
    public String component5() {
        return getTargetKey();
    }

    @Override
    public String component6() {
        return getFlowInstanceId();
    }

    @Override
    public String component7() {
        return getMoveName();
    }

    @Override
    public String component8() {
        return getMoveBy();
    }

    @Override
    public LocalDateTime component9() {
        return getMoveAt();
    }

    @Override
    public String component10() {
        return getMoveComponent();
    }

    @Override
    public Boolean component11() {
        return getActive();
    }

    @Override
    public String component12() {
        return getSigma();
    }

    @Override
    public String component13() {
        return getMetadata();
    }

    @Override
    public String component14() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component15() {
        return getCreatedAt();
    }

    @Override
    public String component16() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component17() {
        return getUpdatedAt();
    }

    @Override
    public String component18() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getSourceKey();
    }

    @Override
    public String value5() {
        return getTargetKey();
    }

    @Override
    public String value6() {
        return getFlowInstanceId();
    }

    @Override
    public String value7() {
        return getMoveName();
    }

    @Override
    public String value8() {
        return getMoveBy();
    }

    @Override
    public LocalDateTime value9() {
        return getMoveAt();
    }

    @Override
    public String value10() {
        return getMoveComponent();
    }

    @Override
    public Boolean value11() {
        return getActive();
    }

    @Override
    public String value12() {
        return getSigma();
    }

    @Override
    public String value13() {
        return getMetadata();
    }

    @Override
    public String value14() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value15() {
        return getCreatedAt();
    }

    @Override
    public String value16() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value17() {
        return getUpdatedAt();
    }

    @Override
    public String value18() {
        return getUpdatedBy();
    }

    @Override
    public WMovementRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public WMovementRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public WMovementRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public WMovementRecord value4(String value) {
        setSourceKey(value);
        return this;
    }

    @Override
    public WMovementRecord value5(String value) {
        setTargetKey(value);
        return this;
    }

    @Override
    public WMovementRecord value6(String value) {
        setFlowInstanceId(value);
        return this;
    }

    @Override
    public WMovementRecord value7(String value) {
        setMoveName(value);
        return this;
    }

    @Override
    public WMovementRecord value8(String value) {
        setMoveBy(value);
        return this;
    }

    @Override
    public WMovementRecord value9(LocalDateTime value) {
        setMoveAt(value);
        return this;
    }

    @Override
    public WMovementRecord value10(String value) {
        setMoveComponent(value);
        return this;
    }

    @Override
    public WMovementRecord value11(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public WMovementRecord value12(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public WMovementRecord value13(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public WMovementRecord value14(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public WMovementRecord value15(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public WMovementRecord value16(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public WMovementRecord value17(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public WMovementRecord value18(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public WMovementRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, LocalDateTime value9, String value10, Boolean value11, String value12, String value13, String value14, LocalDateTime value15, String value16, LocalDateTime value17, String value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWMovement from) {
        setKey(from.getKey());
        setCode(from.getCode());
        setName(from.getName());
        setSourceKey(from.getSourceKey());
        setTargetKey(from.getTargetKey());
        setFlowInstanceId(from.getFlowInstanceId());
        setMoveName(from.getMoveName());
        setMoveBy(from.getMoveBy());
        setMoveAt(from.getMoveAt());
        setMoveComponent(from.getMoveComponent());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IWMovement> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WMovementRecord
     */
    public WMovementRecord() {
        super(WMovement.W_MOVEMENT);
    }

    /**
     * Create a detached, initialised WMovementRecord
     */
    public WMovementRecord(String key, String code, String name, String sourceKey, String targetKey, String flowInstanceId, String moveName, String moveBy, LocalDateTime moveAt, String moveComponent, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(WMovement.W_MOVEMENT);

        setKey(key);
        setCode(code);
        setName(name);
        setSourceKey(sourceKey);
        setTargetKey(targetKey);
        setFlowInstanceId(flowInstanceId);
        setMoveName(moveName);
        setMoveBy(moveBy);
        setMoveAt(moveAt);
        setMoveComponent(moveComponent);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised WMovementRecord
     */
    public WMovementRecord(cn.vertxup.workflow.domain.tables.pojos.WMovement value) {
        super(WMovement.W_MOVEMENT);

        if (value != null) {
            setKey(value.getKey());
            setCode(value.getCode());
            setName(value.getName());
            setSourceKey(value.getSourceKey());
            setTargetKey(value.getTargetKey());
            setFlowInstanceId(value.getFlowInstanceId());
            setMoveName(value.getMoveName());
            setMoveBy(value.getMoveBy());
            setMoveAt(value.getMoveAt());
            setMoveComponent(value.getMoveComponent());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public WMovementRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
