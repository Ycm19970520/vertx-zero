/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.records;


import cn.vertxup.workflow.domain.tables.WFlow;
import cn.vertxup.workflow.domain.tables.interfaces.IWFlow;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WFlowRecord extends UpdatableRecordImpl<WFlowRecord> implements VertxPojo, Record20<String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IWFlow {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.KEY</code>. 「key」- 流程定义主键
     */
    @Override
    public WFlowRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.KEY</code>. 「key」- 流程定义主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.NAME</code>. 「name」- 流程定义名称
     */
    @Override
    public WFlowRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.NAME</code>. 「name」- 流程定义名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.CODE</code>. 「code」- 流程定义编号（系统可用）
     */
    @Override
    public WFlowRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.CODE</code>. 「code」- 流程定义编号（系统可用）
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.TYPE</code>. 「type」- 流程类型，对接
     * zero.workflow.type的X_TABULAR
     */
    @Override
    public WFlowRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.TYPE</code>. 「type」- 流程类型，对接
     * zero.workflow.type的X_TABULAR
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.DEFINITION_ID</code>. 「definitionId」-
     * 定义ID（读取流程图所需）, getProcessDefinitionId
     */
    @Override
    public WFlowRecord setDefinitionId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.DEFINITION_ID</code>. 「definitionId」-
     * 定义ID（读取流程图所需）, getProcessDefinitionId
     */
    @Override
    public String getDefinitionId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.RUN_COMPONENT</code>. 「runComponent」-
     * 执行组件
     */
    @Override
    public WFlowRecord setRunComponent(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.RUN_COMPONENT</code>. 「runComponent」-
     * 执行组件
     */
    @Override
    public String getRunComponent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.RUN_CONFIG</code>. 「runConfig」- 执行配置
     */
    @Override
    public WFlowRecord setRunConfig(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.RUN_CONFIG</code>. 「runConfig」- 执行配置
     */
    @Override
    public String getRunConfig() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.BOOT_COMPONENT</code>.
     * 「bootComponent」- 启动组件
     */
    @Override
    public WFlowRecord setBootComponent(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.BOOT_COMPONENT</code>.
     * 「bootComponent」- 启动组件
     */
    @Override
    public String getBootComponent() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.BOOT_CONFIG</code>. 「bootConfig」- 启动配置
     */
    @Override
    public WFlowRecord setBootConfig(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.BOOT_CONFIG</code>. 「bootConfig」- 启动配置
     */
    @Override
    public String getBootConfig() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.TODO_COMPONENT</code>.
     * 「todoComponent」- Todo专用组件
     */
    @Override
    public WFlowRecord setTodoComponent(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.TODO_COMPONENT</code>.
     * 「todoComponent」- Todo专用组件
     */
    @Override
    public String getTodoComponent() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.TODO_CONFIG</code>. 「todoConfig」-
     * Todo配置，生成UI专用配置（旧系统所需，新系统会扩展此处的写法）
     */
    @Override
    public WFlowRecord setTodoConfig(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.TODO_CONFIG</code>. 「todoConfig」-
     * Todo配置，生成UI专用配置（旧系统所需，新系统会扩展此处的写法）
     */
    @Override
    public String getTodoConfig() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.COMMENT</code>. 「comment」 - 流程定义备注
     */
    @Override
    public WFlowRecord setComment(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.COMMENT</code>. 「comment」 - 流程定义备注
     */
    @Override
    public String getComment() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public WFlowRecord setActive(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public WFlowRecord setSigma(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public WFlowRecord setMetadata(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public WFlowRecord setLanguage(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public WFlowRecord setCreatedAt(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public WFlowRecord setCreatedBy(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public WFlowRecord setUpdatedAt(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public WFlowRecord setUpdatedBy(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return WFlow.W_FLOW.KEY;
    }

    @Override
    public Field<String> field2() {
        return WFlow.W_FLOW.NAME;
    }

    @Override
    public Field<String> field3() {
        return WFlow.W_FLOW.CODE;
    }

    @Override
    public Field<String> field4() {
        return WFlow.W_FLOW.TYPE;
    }

    @Override
    public Field<String> field5() {
        return WFlow.W_FLOW.DEFINITION_ID;
    }

    @Override
    public Field<String> field6() {
        return WFlow.W_FLOW.RUN_COMPONENT;
    }

    @Override
    public Field<String> field7() {
        return WFlow.W_FLOW.RUN_CONFIG;
    }

    @Override
    public Field<String> field8() {
        return WFlow.W_FLOW.BOOT_COMPONENT;
    }

    @Override
    public Field<String> field9() {
        return WFlow.W_FLOW.BOOT_CONFIG;
    }

    @Override
    public Field<String> field10() {
        return WFlow.W_FLOW.TODO_COMPONENT;
    }

    @Override
    public Field<String> field11() {
        return WFlow.W_FLOW.TODO_CONFIG;
    }

    @Override
    public Field<String> field12() {
        return WFlow.W_FLOW.COMMENT;
    }

    @Override
    public Field<Boolean> field13() {
        return WFlow.W_FLOW.ACTIVE;
    }

    @Override
    public Field<String> field14() {
        return WFlow.W_FLOW.SIGMA;
    }

    @Override
    public Field<String> field15() {
        return WFlow.W_FLOW.METADATA;
    }

    @Override
    public Field<String> field16() {
        return WFlow.W_FLOW.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return WFlow.W_FLOW.CREATED_AT;
    }

    @Override
    public Field<String> field18() {
        return WFlow.W_FLOW.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field19() {
        return WFlow.W_FLOW.UPDATED_AT;
    }

    @Override
    public Field<String> field20() {
        return WFlow.W_FLOW.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getDefinitionId();
    }

    @Override
    public String component6() {
        return getRunComponent();
    }

    @Override
    public String component7() {
        return getRunConfig();
    }

    @Override
    public String component8() {
        return getBootComponent();
    }

    @Override
    public String component9() {
        return getBootConfig();
    }

    @Override
    public String component10() {
        return getTodoComponent();
    }

    @Override
    public String component11() {
        return getTodoConfig();
    }

    @Override
    public String component12() {
        return getComment();
    }

    @Override
    public Boolean component13() {
        return getActive();
    }

    @Override
    public String component14() {
        return getSigma();
    }

    @Override
    public String component15() {
        return getMetadata();
    }

    @Override
    public String component16() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component17() {
        return getCreatedAt();
    }

    @Override
    public String component18() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component19() {
        return getUpdatedAt();
    }

    @Override
    public String component20() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getDefinitionId();
    }

    @Override
    public String value6() {
        return getRunComponent();
    }

    @Override
    public String value7() {
        return getRunConfig();
    }

    @Override
    public String value8() {
        return getBootComponent();
    }

    @Override
    public String value9() {
        return getBootConfig();
    }

    @Override
    public String value10() {
        return getTodoComponent();
    }

    @Override
    public String value11() {
        return getTodoConfig();
    }

    @Override
    public String value12() {
        return getComment();
    }

    @Override
    public Boolean value13() {
        return getActive();
    }

    @Override
    public String value14() {
        return getSigma();
    }

    @Override
    public String value15() {
        return getMetadata();
    }

    @Override
    public String value16() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value17() {
        return getCreatedAt();
    }

    @Override
    public String value18() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value19() {
        return getUpdatedAt();
    }

    @Override
    public String value20() {
        return getUpdatedBy();
    }

    @Override
    public WFlowRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public WFlowRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public WFlowRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public WFlowRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public WFlowRecord value5(String value) {
        setDefinitionId(value);
        return this;
    }

    @Override
    public WFlowRecord value6(String value) {
        setRunComponent(value);
        return this;
    }

    @Override
    public WFlowRecord value7(String value) {
        setRunConfig(value);
        return this;
    }

    @Override
    public WFlowRecord value8(String value) {
        setBootComponent(value);
        return this;
    }

    @Override
    public WFlowRecord value9(String value) {
        setBootConfig(value);
        return this;
    }

    @Override
    public WFlowRecord value10(String value) {
        setTodoComponent(value);
        return this;
    }

    @Override
    public WFlowRecord value11(String value) {
        setTodoConfig(value);
        return this;
    }

    @Override
    public WFlowRecord value12(String value) {
        setComment(value);
        return this;
    }

    @Override
    public WFlowRecord value13(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public WFlowRecord value14(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public WFlowRecord value15(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public WFlowRecord value16(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public WFlowRecord value17(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public WFlowRecord value18(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public WFlowRecord value19(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public WFlowRecord value20(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public WFlowRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, Boolean value13, String value14, String value15, String value16, LocalDateTime value17, String value18, LocalDateTime value19, String value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWFlow from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setType(from.getType());
        setDefinitionId(from.getDefinitionId());
        setRunComponent(from.getRunComponent());
        setRunConfig(from.getRunConfig());
        setBootComponent(from.getBootComponent());
        setBootConfig(from.getBootConfig());
        setTodoComponent(from.getTodoComponent());
        setTodoConfig(from.getTodoConfig());
        setComment(from.getComment());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IWFlow> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WFlowRecord
     */
    public WFlowRecord() {
        super(WFlow.W_FLOW);
    }

    /**
     * Create a detached, initialised WFlowRecord
     */
    public WFlowRecord(String key, String name, String code, String type, String definitionId, String runComponent, String runConfig, String bootComponent, String bootConfig, String todoComponent, String todoConfig, String comment, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(WFlow.W_FLOW);

        setKey(key);
        setName(name);
        setCode(code);
        setType(type);
        setDefinitionId(definitionId);
        setRunComponent(runComponent);
        setRunConfig(runConfig);
        setBootComponent(bootComponent);
        setBootConfig(bootConfig);
        setTodoComponent(todoComponent);
        setTodoConfig(todoConfig);
        setComment(comment);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised WFlowRecord
     */
    public WFlowRecord(cn.vertxup.workflow.domain.tables.pojos.WFlow value) {
        super(WFlow.W_FLOW);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setType(value.getType());
            setDefinitionId(value.getDefinitionId());
            setRunComponent(value.getRunComponent());
            setRunConfig(value.getRunConfig());
            setBootComponent(value.getBootComponent());
            setBootConfig(value.getBootConfig());
            setTodoComponent(value.getTodoComponent());
            setTodoConfig(value.getTodoConfig());
            setComment(value.getComment());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public WFlowRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
