/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IWNode extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.KEY</code>. 「key」- 节点定义主键
     */
    public IWNode setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.KEY</code>. 「key」- 节点定义主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.NAME</code>. 「name」- 节点定义名称
     */
    public IWNode setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.NAME</code>. 「name」- 节点定义名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.CODE</code>. 「code」- 节点定义编号（系统可用）
     */
    public IWNode setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.CODE</code>. 「code」- 节点定义编号（系统可用）
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.TYPE</code>. 「type」- 节点类型，START | END
     * | MIDDLE | DECISION
     */
    public IWNode setType(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.TYPE</code>. 「type」- 节点类型，START | END
     * | MIDDLE | DECISION
     */
    public String getType();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.FLOW_ID</code>. 「flowId」- 所属流程图
     */
    public IWNode setFlowId(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.FLOW_ID</code>. 「flowId」- 所属流程图
     */
    public String getFlowId();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.FORM_CODE</code>. 「formCode」- 表单代码
     */
    public IWNode setFormCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.FORM_CODE</code>. 「formCode」- 表单代码
     */
    public String getFormCode();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.FORM_RULE</code>. 「formRule」- 动态表单规则
     */
    public IWNode setFormRule(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.FORM_RULE</code>. 「formRule」- 动态表单规则
     */
    public String getFormRule();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    public IWNode setModelId(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    public String getModelId();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    public IWNode setModelKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    public String getModelKey();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.ENTITY_ID</code>. 「entityId」- 主实体
     */
    public IWNode setEntityId(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.ENTITY_ID</code>. 「entityId」- 主实体
     */
    public String getEntityId();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.ENTITY_KEY</code>. 「entityKey」- 主实体主键
     */
    public IWNode setEntityKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.ENTITY_KEY</code>. 「entityKey」- 主实体主键
     */
    public String getEntityKey();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.RULE_ROLE</code>. 「ruleRole」- 角色规则
     */
    public IWNode setRuleRole(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.RULE_ROLE</code>. 「ruleRole」- 角色规则
     */
    public String getRuleRole();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.RULE_GROUP</code>. 「ruleGroup」- 组规则
     */
    public IWNode setRuleGroup(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.RULE_GROUP</code>. 「ruleGroup」- 组规则
     */
    public String getRuleGroup();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.RULE_USER</code>. 「ruleUser」- 用户规则规则
     */
    public IWNode setRuleUser(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.RULE_USER</code>. 「ruleUser」- 用户规则规则
     */
    public String getRuleUser();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.ACTIVE</code>. 「active」- 是否启用
     */
    public IWNode setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.SIGMA</code>. 「sigma」- 统一标识
     */
    public IWNode setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.METADATA</code>. 「metadata」- 附加配置
     */
    public IWNode setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IWNode setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IWNode setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IWNode setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IWNode setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IWNode setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IWNode
     */
    public void from(IWNode from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IWNode
     */
    public <E extends IWNode> E into(E into);

        @Override
        public default IWNode fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setFlowId,json::getString,"FLOW_ID","java.lang.String");
                setOrThrow(this::setFormCode,json::getString,"FORM_CODE","java.lang.String");
                setOrThrow(this::setFormRule,json::getString,"FORM_RULE","java.lang.String");
                setOrThrow(this::setModelId,json::getString,"MODEL_ID","java.lang.String");
                setOrThrow(this::setModelKey,json::getString,"MODEL_KEY","java.lang.String");
                setOrThrow(this::setEntityId,json::getString,"ENTITY_ID","java.lang.String");
                setOrThrow(this::setEntityKey,json::getString,"ENTITY_KEY","java.lang.String");
                setOrThrow(this::setRuleRole,json::getString,"RULE_ROLE","java.lang.String");
                setOrThrow(this::setRuleGroup,json::getString,"RULE_GROUP","java.lang.String");
                setOrThrow(this::setRuleUser,json::getString,"RULE_USER","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("TYPE",getType());
                json.put("FLOW_ID",getFlowId());
                json.put("FORM_CODE",getFormCode());
                json.put("FORM_RULE",getFormRule());
                json.put("MODEL_ID",getModelId());
                json.put("MODEL_KEY",getModelKey());
                json.put("ENTITY_ID",getEntityId());
                json.put("ENTITY_KEY",getEntityKey());
                json.put("RULE_ROLE",getRuleRole());
                json.put("RULE_GROUP",getRuleGroup());
                json.put("RULE_USER",getRuleUser());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("METADATA",getMetadata());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
