/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.records;


import cn.vertxup.workflow.domain.tables.WNode;
import cn.vertxup.workflow.domain.tables.interfaces.IWNode;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WNodeRecord extends UpdatableRecordImpl<WNodeRecord> implements VertxPojo, Record22<String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IWNode {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.KEY</code>. 「key」- 节点定义主键
     */
    @Override
    public WNodeRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.KEY</code>. 「key」- 节点定义主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.NAME</code>. 「name」- 节点定义名称
     */
    @Override
    public WNodeRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.NAME</code>. 「name」- 节点定义名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.CODE</code>. 「code」- 节点定义编号（系统可用）
     */
    @Override
    public WNodeRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.CODE</code>. 「code」- 节点定义编号（系统可用）
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.TYPE</code>. 「type」- 节点类型，START | END
     * | MIDDLE | DECISION
     */
    @Override
    public WNodeRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.TYPE</code>. 「type」- 节点类型，START | END
     * | MIDDLE | DECISION
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.FLOW_ID</code>. 「flowId」- 所属流程图
     */
    @Override
    public WNodeRecord setFlowId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.FLOW_ID</code>. 「flowId」- 所属流程图
     */
    @Override
    public String getFlowId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.FORM_CODE</code>. 「formCode」- 表单代码
     */
    @Override
    public WNodeRecord setFormCode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.FORM_CODE</code>. 「formCode」- 表单代码
     */
    @Override
    public String getFormCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.FORM_RULE</code>. 「formRule」- 动态表单规则
     */
    @Override
    public WNodeRecord setFormRule(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.FORM_RULE</code>. 「formRule」- 动态表单规则
     */
    @Override
    public String getFormRule() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public WNodeRecord setModelId(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public WNodeRecord setModelKey(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.ENTITY_ID</code>. 「entityId」- 主实体
     */
    @Override
    public WNodeRecord setEntityId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.ENTITY_ID</code>. 「entityId」- 主实体
     */
    @Override
    public String getEntityId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.ENTITY_KEY</code>. 「entityKey」- 主实体主键
     */
    @Override
    public WNodeRecord setEntityKey(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.ENTITY_KEY</code>. 「entityKey」- 主实体主键
     */
    @Override
    public String getEntityKey() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.RULE_ROLE</code>. 「ruleRole」- 角色规则
     */
    @Override
    public WNodeRecord setRuleRole(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.RULE_ROLE</code>. 「ruleRole」- 角色规则
     */
    @Override
    public String getRuleRole() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.RULE_GROUP</code>. 「ruleGroup」- 组规则
     */
    @Override
    public WNodeRecord setRuleGroup(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.RULE_GROUP</code>. 「ruleGroup」- 组规则
     */
    @Override
    public String getRuleGroup() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.RULE_USER</code>. 「ruleUser」- 用户规则规则
     */
    @Override
    public WNodeRecord setRuleUser(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.RULE_USER</code>. 「ruleUser」- 用户规则规则
     */
    @Override
    public String getRuleUser() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public WNodeRecord setActive(Boolean value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public WNodeRecord setSigma(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public WNodeRecord setMetadata(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public WNodeRecord setLanguage(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public WNodeRecord setCreatedAt(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public WNodeRecord setCreatedBy(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public WNodeRecord setUpdatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for <code>DB_ETERNAL.W_NODE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public WNodeRecord setUpdatedBy(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_NODE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(21);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row22<String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    @Override
    public Row22<String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row22) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return WNode.W_NODE.KEY;
    }

    @Override
    public Field<String> field2() {
        return WNode.W_NODE.NAME;
    }

    @Override
    public Field<String> field3() {
        return WNode.W_NODE.CODE;
    }

    @Override
    public Field<String> field4() {
        return WNode.W_NODE.TYPE;
    }

    @Override
    public Field<String> field5() {
        return WNode.W_NODE.FLOW_ID;
    }

    @Override
    public Field<String> field6() {
        return WNode.W_NODE.FORM_CODE;
    }

    @Override
    public Field<String> field7() {
        return WNode.W_NODE.FORM_RULE;
    }

    @Override
    public Field<String> field8() {
        return WNode.W_NODE.MODEL_ID;
    }

    @Override
    public Field<String> field9() {
        return WNode.W_NODE.MODEL_KEY;
    }

    @Override
    public Field<String> field10() {
        return WNode.W_NODE.ENTITY_ID;
    }

    @Override
    public Field<String> field11() {
        return WNode.W_NODE.ENTITY_KEY;
    }

    @Override
    public Field<String> field12() {
        return WNode.W_NODE.RULE_ROLE;
    }

    @Override
    public Field<String> field13() {
        return WNode.W_NODE.RULE_GROUP;
    }

    @Override
    public Field<String> field14() {
        return WNode.W_NODE.RULE_USER;
    }

    @Override
    public Field<Boolean> field15() {
        return WNode.W_NODE.ACTIVE;
    }

    @Override
    public Field<String> field16() {
        return WNode.W_NODE.SIGMA;
    }

    @Override
    public Field<String> field17() {
        return WNode.W_NODE.METADATA;
    }

    @Override
    public Field<String> field18() {
        return WNode.W_NODE.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field19() {
        return WNode.W_NODE.CREATED_AT;
    }

    @Override
    public Field<String> field20() {
        return WNode.W_NODE.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field21() {
        return WNode.W_NODE.UPDATED_AT;
    }

    @Override
    public Field<String> field22() {
        return WNode.W_NODE.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getFlowId();
    }

    @Override
    public String component6() {
        return getFormCode();
    }

    @Override
    public String component7() {
        return getFormRule();
    }

    @Override
    public String component8() {
        return getModelId();
    }

    @Override
    public String component9() {
        return getModelKey();
    }

    @Override
    public String component10() {
        return getEntityId();
    }

    @Override
    public String component11() {
        return getEntityKey();
    }

    @Override
    public String component12() {
        return getRuleRole();
    }

    @Override
    public String component13() {
        return getRuleGroup();
    }

    @Override
    public String component14() {
        return getRuleUser();
    }

    @Override
    public Boolean component15() {
        return getActive();
    }

    @Override
    public String component16() {
        return getSigma();
    }

    @Override
    public String component17() {
        return getMetadata();
    }

    @Override
    public String component18() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component19() {
        return getCreatedAt();
    }

    @Override
    public String component20() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component21() {
        return getUpdatedAt();
    }

    @Override
    public String component22() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getFlowId();
    }

    @Override
    public String value6() {
        return getFormCode();
    }

    @Override
    public String value7() {
        return getFormRule();
    }

    @Override
    public String value8() {
        return getModelId();
    }

    @Override
    public String value9() {
        return getModelKey();
    }

    @Override
    public String value10() {
        return getEntityId();
    }

    @Override
    public String value11() {
        return getEntityKey();
    }

    @Override
    public String value12() {
        return getRuleRole();
    }

    @Override
    public String value13() {
        return getRuleGroup();
    }

    @Override
    public String value14() {
        return getRuleUser();
    }

    @Override
    public Boolean value15() {
        return getActive();
    }

    @Override
    public String value16() {
        return getSigma();
    }

    @Override
    public String value17() {
        return getMetadata();
    }

    @Override
    public String value18() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value19() {
        return getCreatedAt();
    }

    @Override
    public String value20() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value21() {
        return getUpdatedAt();
    }

    @Override
    public String value22() {
        return getUpdatedBy();
    }

    @Override
    public WNodeRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public WNodeRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public WNodeRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public WNodeRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public WNodeRecord value5(String value) {
        setFlowId(value);
        return this;
    }

    @Override
    public WNodeRecord value6(String value) {
        setFormCode(value);
        return this;
    }

    @Override
    public WNodeRecord value7(String value) {
        setFormRule(value);
        return this;
    }

    @Override
    public WNodeRecord value8(String value) {
        setModelId(value);
        return this;
    }

    @Override
    public WNodeRecord value9(String value) {
        setModelKey(value);
        return this;
    }

    @Override
    public WNodeRecord value10(String value) {
        setEntityId(value);
        return this;
    }

    @Override
    public WNodeRecord value11(String value) {
        setEntityKey(value);
        return this;
    }

    @Override
    public WNodeRecord value12(String value) {
        setRuleRole(value);
        return this;
    }

    @Override
    public WNodeRecord value13(String value) {
        setRuleGroup(value);
        return this;
    }

    @Override
    public WNodeRecord value14(String value) {
        setRuleUser(value);
        return this;
    }

    @Override
    public WNodeRecord value15(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public WNodeRecord value16(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public WNodeRecord value17(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public WNodeRecord value18(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public WNodeRecord value19(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public WNodeRecord value20(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public WNodeRecord value21(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public WNodeRecord value22(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public WNodeRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, String value14, Boolean value15, String value16, String value17, String value18, LocalDateTime value19, String value20, LocalDateTime value21, String value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWNode from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setType(from.getType());
        setFlowId(from.getFlowId());
        setFormCode(from.getFormCode());
        setFormRule(from.getFormRule());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setEntityId(from.getEntityId());
        setEntityKey(from.getEntityKey());
        setRuleRole(from.getRuleRole());
        setRuleGroup(from.getRuleGroup());
        setRuleUser(from.getRuleUser());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IWNode> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WNodeRecord
     */
    public WNodeRecord() {
        super(WNode.W_NODE);
    }

    /**
     * Create a detached, initialised WNodeRecord
     */
    public WNodeRecord(String key, String name, String code, String type, String flowId, String formCode, String formRule, String modelId, String modelKey, String entityId, String entityKey, String ruleRole, String ruleGroup, String ruleUser, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(WNode.W_NODE);

        setKey(key);
        setName(name);
        setCode(code);
        setType(type);
        setFlowId(flowId);
        setFormCode(formCode);
        setFormRule(formRule);
        setModelId(modelId);
        setModelKey(modelKey);
        setEntityId(entityId);
        setEntityKey(entityKey);
        setRuleRole(ruleRole);
        setRuleGroup(ruleGroup);
        setRuleUser(ruleUser);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised WNodeRecord
     */
    public WNodeRecord(cn.vertxup.workflow.domain.tables.pojos.WNode value) {
        super(WNode.W_NODE);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setType(value.getType());
            setFlowId(value.getFlowId());
            setFormCode(value.getFormCode());
            setFormRule(value.getFormRule());
            setModelId(value.getModelId());
            setModelKey(value.getModelKey());
            setEntityId(value.getEntityId());
            setEntityKey(value.getEntityKey());
            setRuleRole(value.getRuleRole());
            setRuleGroup(value.getRuleGroup());
            setRuleUser(value.getRuleUser());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public WNodeRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
