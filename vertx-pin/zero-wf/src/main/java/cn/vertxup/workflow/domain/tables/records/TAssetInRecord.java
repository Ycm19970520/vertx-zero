/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.records;


import cn.vertxup.workflow.domain.tables.TAssetIn;
import cn.vertxup.workflow.domain.tables.interfaces.ITAssetIn;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TAssetInRecord extends UpdatableRecordImpl<TAssetInRecord> implements VertxPojo, Record2<String, String>, ITAssetIn {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.T_ASSET_IN.KEY</code>. 「key」-
     * 单据主键（主单主键Join模式）
     */
    @Override
    public TAssetInRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_ASSET_IN.KEY</code>. 「key」-
     * 单据主键（主单主键Join模式）
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.T_ASSET_IN.COMMENT_IN</code>. 「commentIn」-
     * 入库备注
     */
    @Override
    public TAssetInRecord setCommentIn(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_ASSET_IN.COMMENT_IN</code>. 「commentIn」-
     * 入库备注
     */
    @Override
    public String getCommentIn() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TAssetIn.T_ASSET_IN.KEY;
    }

    @Override
    public Field<String> field2() {
        return TAssetIn.T_ASSET_IN.COMMENT_IN;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getCommentIn();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getCommentIn();
    }

    @Override
    public TAssetInRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public TAssetInRecord value2(String value) {
        setCommentIn(value);
        return this;
    }

    @Override
    public TAssetInRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITAssetIn from) {
        setKey(from.getKey());
        setCommentIn(from.getCommentIn());
    }

    @Override
    public <E extends ITAssetIn> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TAssetInRecord
     */
    public TAssetInRecord() {
        super(TAssetIn.T_ASSET_IN);
    }

    /**
     * Create a detached, initialised TAssetInRecord
     */
    public TAssetInRecord(String key, String commentIn) {
        super(TAssetIn.T_ASSET_IN);

        setKey(key);
        setCommentIn(commentIn);
    }

    /**
     * Create a detached, initialised TAssetInRecord
     */
    public TAssetInRecord(cn.vertxup.workflow.domain.tables.pojos.TAssetIn value) {
        super(TAssetIn.T_ASSET_IN);

        if (value != null) {
            setKey(value.getKey());
            setCommentIn(value.getCommentIn());
        }
    }

    public TAssetInRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
