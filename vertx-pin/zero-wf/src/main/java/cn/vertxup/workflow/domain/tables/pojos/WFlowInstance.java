/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.pojos;


import cn.vertxup.workflow.domain.tables.interfaces.IWFlowInstance;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WFlowInstance implements VertxPojo, IWFlowInstance {

    private static final long serialVersionUID = 1L;

    private String        key;
    private String        code;
    private String        serial;
    private String        name;
    private String        phase;
    private String        flowId;
    private String        userId;
    private String        coordinate;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public WFlowInstance() {}

    public WFlowInstance(IWFlowInstance value) {
        this.key = value.getKey();
        this.code = value.getCode();
        this.serial = value.getSerial();
        this.name = value.getName();
        this.phase = value.getPhase();
        this.flowId = value.getFlowId();
        this.userId = value.getUserId();
        this.coordinate = value.getCoordinate();
        this.active = value.getActive();
        this.sigma = value.getSigma();
        this.metadata = value.getMetadata();
        this.language = value.getLanguage();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public WFlowInstance(
        String        key,
        String        code,
        String        serial,
        String        name,
        String        phase,
        String        flowId,
        String        userId,
        String        coordinate,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.code = code;
        this.serial = serial;
        this.name = name;
        this.phase = phase;
        this.flowId = flowId;
        this.userId = userId;
        this.coordinate = coordinate;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

        public WFlowInstance(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.KEY</code>. 「key」- 流程定义主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.KEY</code>. 「key」- 流程定义主键
     */
    @Override
    public WFlowInstance setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CODE</code>. 「code」-
     * 流程定义编号（系统可用）
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CODE</code>. 「code」-
     * 流程定义编号（系统可用）
     */
    @Override
    public WFlowInstance setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.SERIAL</code>. 「serial」-
     * 流程实例编号
     */
    @Override
    public String getSerial() {
        return this.serial;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.SERIAL</code>. 「serial」-
     * 流程实例编号
     */
    @Override
    public WFlowInstance setSerial(String serial) {
        this.serial = serial;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.NAME</code>. 「name」- 流程定义名称
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.NAME</code>. 「name」- 流程定义名称
     */
    @Override
    public WFlowInstance setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.PHASE</code>. 「phase」-
     * 流程实例所属周期
     */
    @Override
    public String getPhase() {
        return this.phase;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.PHASE</code>. 「phase」-
     * 流程实例所属周期
     */
    @Override
    public WFlowInstance setPhase(String phase) {
        this.phase = phase;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.FLOW_ID</code>. 「flowId」-
     * 所属流程图
     */
    @Override
    public String getFlowId() {
        return this.flowId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.FLOW_ID</code>. 「flowId」-
     * 所属流程图
     */
    @Override
    public WFlowInstance setFlowId(String flowId) {
        this.flowId = flowId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.USER_ID</code>. 「userId」-
     * 所属人员ID
     */
    @Override
    public String getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.USER_ID</code>. 「userId」-
     * 所属人员ID
     */
    @Override
    public WFlowInstance setUserId(String userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.COORDINATE</code>.
     * 「coordinate」- 所属流程坐标描述
     */
    @Override
    public String getCoordinate() {
        return this.coordinate;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.COORDINATE</code>.
     * 「coordinate」- 所属流程坐标描述
     */
    @Override
    public WFlowInstance setCoordinate(String coordinate) {
        this.coordinate = coordinate;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public WFlowInstance setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public WFlowInstance setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public WFlowInstance setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public WFlowInstance setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public WFlowInstance setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public WFlowInstance setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public WFlowInstance setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public WFlowInstance setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WFlowInstance (");

        sb.append(key);
        sb.append(", ").append(code);
        sb.append(", ").append(serial);
        sb.append(", ").append(name);
        sb.append(", ").append(phase);
        sb.append(", ").append(flowId);
        sb.append(", ").append(userId);
        sb.append(", ").append(coordinate);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWFlowInstance from) {
        setKey(from.getKey());
        setCode(from.getCode());
        setSerial(from.getSerial());
        setName(from.getName());
        setPhase(from.getPhase());
        setFlowId(from.getFlowId());
        setUserId(from.getUserId());
        setCoordinate(from.getCoordinate());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IWFlowInstance> E into(E into) {
        into.from(this);
        return into;
    }
}
