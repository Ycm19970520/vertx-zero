/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IWFlowInstance extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.KEY</code>. 「key」- 流程定义主键
     */
    public IWFlowInstance setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.KEY</code>. 「key」- 流程定义主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CODE</code>. 「code」-
     * 流程定义编号（系统可用）
     */
    public IWFlowInstance setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CODE</code>. 「code」-
     * 流程定义编号（系统可用）
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.SERIAL</code>. 「serial」-
     * 流程实例编号
     */
    public IWFlowInstance setSerial(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.SERIAL</code>. 「serial」-
     * 流程实例编号
     */
    public String getSerial();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.NAME</code>. 「name」- 流程定义名称
     */
    public IWFlowInstance setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.NAME</code>. 「name」- 流程定义名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.PHASE</code>. 「phase」-
     * 流程实例所属周期
     */
    public IWFlowInstance setPhase(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.PHASE</code>. 「phase」-
     * 流程实例所属周期
     */
    public String getPhase();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.FLOW_ID</code>. 「flowId」-
     * 所属流程图
     */
    public IWFlowInstance setFlowId(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.FLOW_ID</code>. 「flowId」-
     * 所属流程图
     */
    public String getFlowId();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.USER_ID</code>. 「userId」-
     * 所属人员ID
     */
    public IWFlowInstance setUserId(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.USER_ID</code>. 「userId」-
     * 所属人员ID
     */
    public String getUserId();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.COORDINATE</code>.
     * 「coordinate」- 所属流程坐标描述
     */
    public IWFlowInstance setCoordinate(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.COORDINATE</code>.
     * 「coordinate」- 所属流程坐标描述
     */
    public String getCoordinate();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    public IWFlowInstance setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    public IWFlowInstance setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.METADATA</code>. 「metadata」-
     * 附加配置
     */
    public IWFlowInstance setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.METADATA</code>. 「metadata」-
     * 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public IWFlowInstance setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    public IWFlowInstance setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    public IWFlowInstance setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    public IWFlowInstance setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW_INSTANCE.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    public IWFlowInstance setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW_INSTANCE.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IWFlowInstance
     */
    public void from(IWFlowInstance from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IWFlowInstance
     */
    public <E extends IWFlowInstance> E into(E into);

        @Override
        public default IWFlowInstance fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setSerial,json::getString,"SERIAL","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setPhase,json::getString,"PHASE","java.lang.String");
                setOrThrow(this::setFlowId,json::getString,"FLOW_ID","java.lang.String");
                setOrThrow(this::setUserId,json::getString,"USER_ID","java.lang.String");
                setOrThrow(this::setCoordinate,json::getString,"COORDINATE","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("CODE",getCode());
                json.put("SERIAL",getSerial());
                json.put("NAME",getName());
                json.put("PHASE",getPhase());
                json.put("FLOW_ID",getFlowId());
                json.put("USER_ID",getUserId());
                json.put("COORDINATE",getCoordinate());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("METADATA",getMetadata());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
