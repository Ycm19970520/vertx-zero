/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.rbac.domain.tables.records;


import cn.vertxup.rbac.domain.tables.SVisitant;
import cn.vertxup.rbac.domain.tables.interfaces.ISVisitant;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SVisitantRecord extends UpdatableRecordImpl<SVisitantRecord> implements Record20<String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, ISVisitant {

    private static final long serialVersionUID = -669594552;

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.KEY</code>. 「key」- 限定记录ID
     */
    @Override
    public SVisitantRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.KEY</code>. 「key」- 限定记录ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.CODE</code>. 「code」- 访问者系统编码
     */
    @Override
    public SVisitantRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.CODE</code>. 「code」- 访问者系统编码
     */
    @Override
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.VIEW_ID</code>. 「viewId」- 视图访问者的读ID
     */
    @Override
    public SVisitantRecord setViewId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.VIEW_ID</code>. 「viewId」- 视图访问者的读ID
     */
    @Override
    public String getViewId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.TYPE</code>. 「type」- 访问者类型
     */
    @Override
    public SVisitantRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.TYPE</code>. 「type」- 访问者类型
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.MODEL_KEY</code>. 「modelKey」- 模型下记录对应的ID
     */
    @Override
    public SVisitantRecord setModelKey(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.MODEL_KEY</code>. 「modelKey」- 模型下记录对应的ID
     */
    @Override
    public String getModelKey() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.MODEL_ID</code>. 「modelId」- 模型对应的 identifier 
     */
    @Override
    public SVisitantRecord setModelId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.MODEL_ID</code>. 「modelId」- 模型对应的 identifier 
     */
    @Override
    public String getModelId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.ATTR_VISIBLE</code>. 「attrVisible」- 可见的属性集
     */
    @Override
    public SVisitantRecord setAttrVisible(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.ATTR_VISIBLE</code>. 「attrVisible」- 可见的属性集
     */
    @Override
    public String getAttrVisible() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.ATTR_VIEW</code>. 「attrView」- 只读的属性集
     */
    @Override
    public SVisitantRecord setAttrView(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.ATTR_VIEW</code>. 「attrView」- 只读的属性集
     */
    @Override
    public String getAttrView() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.ATTR_VARIETY</code>. 「attrVariety」- 多样性的属性集，用于控制集合类型的属性
     */
    @Override
    public SVisitantRecord setAttrVariety(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.ATTR_VARIETY</code>. 「attrVariety」- 多样性的属性集，用于控制集合类型的属性
     */
    @Override
    public String getAttrVariety() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.ATTR_VARIETY_CONFIG</code>. 「attrVarietyConfig」- 多样性的属性集相关配置
     */
    @Override
    public SVisitantRecord setAttrVarietyConfig(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.ATTR_VARIETY_CONFIG</code>. 「attrVarietyConfig」- 多样性的属性集相关配置
     */
    @Override
    public String getAttrVarietyConfig() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.ATTR_VOW</code>. 「attrVow」- 引用类属性集
     */
    @Override
    public SVisitantRecord setAttrVow(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.ATTR_VOW</code>. 「attrVow」- 引用类属性集
     */
    @Override
    public String getAttrVow() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.ATTR_VOW_CONFIG</code>. 「attrVowConfig」- 引用类属性集相关配置
     */
    @Override
    public SVisitantRecord setAttrVowConfig(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.ATTR_VOW_CONFIG</code>. 「attrVowConfig」- 引用类属性集相关配置
     */
    @Override
    public String getAttrVowConfig() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public SVisitantRecord setSigma(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public SVisitantRecord setLanguage(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public SVisitantRecord setActive(Boolean value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public SVisitantRecord setMetadata(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public SVisitantRecord setCreatedAt(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public SVisitantRecord setCreatedBy(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public SVisitantRecord setUpdatedAt(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.S_VISITANT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public SVisitantRecord setUpdatedBy(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.S_VISITANT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<String, String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row20) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SVisitant.S_VISITANT.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SVisitant.S_VISITANT.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SVisitant.S_VISITANT.VIEW_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SVisitant.S_VISITANT.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SVisitant.S_VISITANT.MODEL_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return SVisitant.S_VISITANT.MODEL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return SVisitant.S_VISITANT.ATTR_VISIBLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return SVisitant.S_VISITANT.ATTR_VIEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return SVisitant.S_VISITANT.ATTR_VARIETY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return SVisitant.S_VISITANT.ATTR_VARIETY_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return SVisitant.S_VISITANT.ATTR_VOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return SVisitant.S_VISITANT.ATTR_VOW_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return SVisitant.S_VISITANT.SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return SVisitant.S_VISITANT.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field15() {
        return SVisitant.S_VISITANT.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return SVisitant.S_VISITANT.METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field17() {
        return SVisitant.S_VISITANT.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field18() {
        return SVisitant.S_VISITANT.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field19() {
        return SVisitant.S_VISITANT.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field20() {
        return SVisitant.S_VISITANT.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getViewId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getModelKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getModelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getAttrVisible();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getAttrView();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getAttrVariety();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getAttrVarietyConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getAttrVow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getAttrVowConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component15() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component17() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component18() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component19() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component20() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getViewId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getModelKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getModelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAttrVisible();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getAttrView();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getAttrVariety();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getAttrVarietyConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getAttrVow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getAttrVowConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value15() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value17() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value18() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value19() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value20() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value2(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value3(String value) {
        setViewId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value5(String value) {
        setModelKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value6(String value) {
        setModelId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value7(String value) {
        setAttrVisible(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value8(String value) {
        setAttrView(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value9(String value) {
        setAttrVariety(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value10(String value) {
        setAttrVarietyConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value11(String value) {
        setAttrVow(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value12(String value) {
        setAttrVowConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value13(String value) {
        setSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value14(String value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value15(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value16(String value) {
        setMetadata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value17(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value18(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value19(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord value20(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SVisitantRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, String value14, Boolean value15, String value16, LocalDateTime value17, String value18, LocalDateTime value19, String value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISVisitant from) {
        setKey(from.getKey());
        setCode(from.getCode());
        setViewId(from.getViewId());
        setType(from.getType());
        setModelKey(from.getModelKey());
        setModelId(from.getModelId());
        setAttrVisible(from.getAttrVisible());
        setAttrView(from.getAttrView());
        setAttrVariety(from.getAttrVariety());
        setAttrVarietyConfig(from.getAttrVarietyConfig());
        setAttrVow(from.getAttrVow());
        setAttrVowConfig(from.getAttrVowConfig());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISVisitant> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SVisitantRecord
     */
    public SVisitantRecord() {
        super(SVisitant.S_VISITANT);
    }

    /**
     * Create a detached, initialised SVisitantRecord
     */
    public SVisitantRecord(String key, String code, String viewId, String type, String modelKey, String modelId, String attrVisible, String attrView, String attrVariety, String attrVarietyConfig, String attrVow, String attrVowConfig, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(SVisitant.S_VISITANT);

        set(0, key);
        set(1, code);
        set(2, viewId);
        set(3, type);
        set(4, modelKey);
        set(5, modelId);
        set(6, attrVisible);
        set(7, attrView);
        set(8, attrVariety);
        set(9, attrVarietyConfig);
        set(10, attrVow);
        set(11, attrVowConfig);
        set(12, sigma);
        set(13, language);
        set(14, active);
        set(15, metadata);
        set(16, createdAt);
        set(17, createdBy);
        set(18, updatedAt);
        set(19, updatedBy);
    }
}
