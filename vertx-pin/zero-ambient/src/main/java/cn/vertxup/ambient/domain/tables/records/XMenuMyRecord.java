/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ambient.domain.tables.records;


import cn.vertxup.ambient.domain.tables.XMenuMy;
import cn.vertxup.ambient.domain.tables.interfaces.IXMenuMy;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record21;
import org.jooq.Row21;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XMenuMyRecord extends UpdatableRecordImpl<XMenuMyRecord> implements VertxPojo, Record21<String, String, String, String, Long, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IXMenuMy {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.KEY</code>. 「key」- 菜单主键
     */
    @Override
    public XMenuMyRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.KEY</code>. 「key」- 菜单主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.ICON</code>. 「icon」- 菜单使用的icon
     */
    @Override
    public XMenuMyRecord setIcon(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.ICON</code>. 「icon」- 菜单使用的icon
     */
    @Override
    public String getIcon() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.TEXT</code>. 「text」- 菜单显示文字
     */
    @Override
    public XMenuMyRecord setText(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.TEXT</code>. 「text」- 菜单显示文字
     */
    @Override
    public String getText() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.URI</code>. 「uri」- 菜单地址（不包含应用的path）
     */
    @Override
    public XMenuMyRecord setUri(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.URI</code>. 「uri」- 菜单地址（不包含应用的path）
     */
    @Override
    public String getUri() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.UI_SORT</code>. 「uiSort」- 菜单排序
     */
    @Override
    public XMenuMyRecord setUiSort(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.UI_SORT</code>. 「uiSort」- 菜单排序
     */
    @Override
    public Long getUiSort() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.UI_PARENT</code>. 「uiParent」- 菜单父ID
     */
    @Override
    public XMenuMyRecord setUiParent(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.UI_PARENT</code>. 「uiParent」- 菜单父ID
     */
    @Override
    public String getUiParent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.UI_COLOR_FG</code>. 「uiColorFg」-
     * 前景色
     */
    @Override
    public XMenuMyRecord setUiColorFg(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.UI_COLOR_FG</code>. 「uiColorFg」-
     * 前景色
     */
    @Override
    public String getUiColorFg() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.UI_COLOR_BG</code>. 「uiColorBg」-
     * 背景色
     */
    @Override
    public XMenuMyRecord setUiColorBg(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.UI_COLOR_BG</code>. 「uiColorBg」-
     * 背景色
     */
    @Override
    public String getUiColorBg() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.TYPE</code>. 「type」- 菜单类型
     */
    @Override
    public XMenuMyRecord setType(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.TYPE</code>. 「type」- 菜单类型
     */
    @Override
    public String getType() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.PAGE</code>. 「page」- 菜单所在页面
     */
    @Override
    public XMenuMyRecord setPage(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.PAGE</code>. 「page」- 菜单所在页面
     */
    @Override
    public String getPage() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.POSITION</code>. 「position」- 菜单位置
     */
    @Override
    public XMenuMyRecord setPosition(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.POSITION</code>. 「position」- 菜单位置
     */
    @Override
    public String getPosition() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.OWNER</code>. 「owner」- 拥有者ID
     */
    @Override
    public XMenuMyRecord setOwner(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.OWNER</code>. 「owner」- 拥有者ID
     */
    @Override
    public String getOwner() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.PARAMETER</code>. 「parameter」-
     * 该菜单的参数（收藏夹专用）
     */
    @Override
    public XMenuMyRecord setParameter(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.PARAMETER</code>. 「parameter」-
     * 该菜单的参数（收藏夹专用）
     */
    @Override
    public String getParameter() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XMenuMyRecord setActive(Boolean value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XMenuMyRecord setSigma(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public XMenuMyRecord setMetadata(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XMenuMyRecord setLanguage(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public XMenuMyRecord setCreatedAt(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public XMenuMyRecord setCreatedBy(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public XMenuMyRecord setUpdatedAt(LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU_MY.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public XMenuMyRecord setUpdatedBy(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU_MY.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(20);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record21 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row21<String, String, String, String, Long, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row21) super.fieldsRow();
    }

    @Override
    public Row21<String, String, String, String, Long, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row21) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return XMenuMy.X_MENU_MY.KEY;
    }

    @Override
    public Field<String> field2() {
        return XMenuMy.X_MENU_MY.ICON;
    }

    @Override
    public Field<String> field3() {
        return XMenuMy.X_MENU_MY.TEXT;
    }

    @Override
    public Field<String> field4() {
        return XMenuMy.X_MENU_MY.URI;
    }

    @Override
    public Field<Long> field5() {
        return XMenuMy.X_MENU_MY.UI_SORT;
    }

    @Override
    public Field<String> field6() {
        return XMenuMy.X_MENU_MY.UI_PARENT;
    }

    @Override
    public Field<String> field7() {
        return XMenuMy.X_MENU_MY.UI_COLOR_FG;
    }

    @Override
    public Field<String> field8() {
        return XMenuMy.X_MENU_MY.UI_COLOR_BG;
    }

    @Override
    public Field<String> field9() {
        return XMenuMy.X_MENU_MY.TYPE;
    }

    @Override
    public Field<String> field10() {
        return XMenuMy.X_MENU_MY.PAGE;
    }

    @Override
    public Field<String> field11() {
        return XMenuMy.X_MENU_MY.POSITION;
    }

    @Override
    public Field<String> field12() {
        return XMenuMy.X_MENU_MY.OWNER;
    }

    @Override
    public Field<String> field13() {
        return XMenuMy.X_MENU_MY.PARAMETER;
    }

    @Override
    public Field<Boolean> field14() {
        return XMenuMy.X_MENU_MY.ACTIVE;
    }

    @Override
    public Field<String> field15() {
        return XMenuMy.X_MENU_MY.SIGMA;
    }

    @Override
    public Field<String> field16() {
        return XMenuMy.X_MENU_MY.METADATA;
    }

    @Override
    public Field<String> field17() {
        return XMenuMy.X_MENU_MY.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field18() {
        return XMenuMy.X_MENU_MY.CREATED_AT;
    }

    @Override
    public Field<String> field19() {
        return XMenuMy.X_MENU_MY.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field20() {
        return XMenuMy.X_MENU_MY.UPDATED_AT;
    }

    @Override
    public Field<String> field21() {
        return XMenuMy.X_MENU_MY.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getIcon();
    }

    @Override
    public String component3() {
        return getText();
    }

    @Override
    public String component4() {
        return getUri();
    }

    @Override
    public Long component5() {
        return getUiSort();
    }

    @Override
    public String component6() {
        return getUiParent();
    }

    @Override
    public String component7() {
        return getUiColorFg();
    }

    @Override
    public String component8() {
        return getUiColorBg();
    }

    @Override
    public String component9() {
        return getType();
    }

    @Override
    public String component10() {
        return getPage();
    }

    @Override
    public String component11() {
        return getPosition();
    }

    @Override
    public String component12() {
        return getOwner();
    }

    @Override
    public String component13() {
        return getParameter();
    }

    @Override
    public Boolean component14() {
        return getActive();
    }

    @Override
    public String component15() {
        return getSigma();
    }

    @Override
    public String component16() {
        return getMetadata();
    }

    @Override
    public String component17() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component18() {
        return getCreatedAt();
    }

    @Override
    public String component19() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component20() {
        return getUpdatedAt();
    }

    @Override
    public String component21() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getIcon();
    }

    @Override
    public String value3() {
        return getText();
    }

    @Override
    public String value4() {
        return getUri();
    }

    @Override
    public Long value5() {
        return getUiSort();
    }

    @Override
    public String value6() {
        return getUiParent();
    }

    @Override
    public String value7() {
        return getUiColorFg();
    }

    @Override
    public String value8() {
        return getUiColorBg();
    }

    @Override
    public String value9() {
        return getType();
    }

    @Override
    public String value10() {
        return getPage();
    }

    @Override
    public String value11() {
        return getPosition();
    }

    @Override
    public String value12() {
        return getOwner();
    }

    @Override
    public String value13() {
        return getParameter();
    }

    @Override
    public Boolean value14() {
        return getActive();
    }

    @Override
    public String value15() {
        return getSigma();
    }

    @Override
    public String value16() {
        return getMetadata();
    }

    @Override
    public String value17() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value18() {
        return getCreatedAt();
    }

    @Override
    public String value19() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value20() {
        return getUpdatedAt();
    }

    @Override
    public String value21() {
        return getUpdatedBy();
    }

    @Override
    public XMenuMyRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public XMenuMyRecord value2(String value) {
        setIcon(value);
        return this;
    }

    @Override
    public XMenuMyRecord value3(String value) {
        setText(value);
        return this;
    }

    @Override
    public XMenuMyRecord value4(String value) {
        setUri(value);
        return this;
    }

    @Override
    public XMenuMyRecord value5(Long value) {
        setUiSort(value);
        return this;
    }

    @Override
    public XMenuMyRecord value6(String value) {
        setUiParent(value);
        return this;
    }

    @Override
    public XMenuMyRecord value7(String value) {
        setUiColorFg(value);
        return this;
    }

    @Override
    public XMenuMyRecord value8(String value) {
        setUiColorBg(value);
        return this;
    }

    @Override
    public XMenuMyRecord value9(String value) {
        setType(value);
        return this;
    }

    @Override
    public XMenuMyRecord value10(String value) {
        setPage(value);
        return this;
    }

    @Override
    public XMenuMyRecord value11(String value) {
        setPosition(value);
        return this;
    }

    @Override
    public XMenuMyRecord value12(String value) {
        setOwner(value);
        return this;
    }

    @Override
    public XMenuMyRecord value13(String value) {
        setParameter(value);
        return this;
    }

    @Override
    public XMenuMyRecord value14(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public XMenuMyRecord value15(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public XMenuMyRecord value16(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public XMenuMyRecord value17(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public XMenuMyRecord value18(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public XMenuMyRecord value19(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public XMenuMyRecord value20(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public XMenuMyRecord value21(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public XMenuMyRecord values(String value1, String value2, String value3, String value4, Long value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, Boolean value14, String value15, String value16, String value17, LocalDateTime value18, String value19, LocalDateTime value20, String value21) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IXMenuMy from) {
        setKey(from.getKey());
        setIcon(from.getIcon());
        setText(from.getText());
        setUri(from.getUri());
        setUiSort(from.getUiSort());
        setUiParent(from.getUiParent());
        setUiColorFg(from.getUiColorFg());
        setUiColorBg(from.getUiColorBg());
        setType(from.getType());
        setPage(from.getPage());
        setPosition(from.getPosition());
        setOwner(from.getOwner());
        setParameter(from.getParameter());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IXMenuMy> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XMenuMyRecord
     */
    public XMenuMyRecord() {
        super(XMenuMy.X_MENU_MY);
    }

    /**
     * Create a detached, initialised XMenuMyRecord
     */
    public XMenuMyRecord(String key, String icon, String text, String uri, Long uiSort, String uiParent, String uiColorFg, String uiColorBg, String type, String page, String position, String owner, String parameter, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(XMenuMy.X_MENU_MY);

        setKey(key);
        setIcon(icon);
        setText(text);
        setUri(uri);
        setUiSort(uiSort);
        setUiParent(uiParent);
        setUiColorFg(uiColorFg);
        setUiColorBg(uiColorBg);
        setType(type);
        setPage(page);
        setPosition(position);
        setOwner(owner);
        setParameter(parameter);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised XMenuMyRecord
     */
    public XMenuMyRecord(cn.vertxup.ambient.domain.tables.pojos.XMenuMy value) {
        super(XMenuMy.X_MENU_MY);

        if (value != null) {
            setKey(value.getKey());
            setIcon(value.getIcon());
            setText(value.getText());
            setUri(value.getUri());
            setUiSort(value.getUiSort());
            setUiParent(value.getUiParent());
            setUiColorFg(value.getUiColorFg());
            setUiColorBg(value.getUiColorBg());
            setType(value.getType());
            setPage(value.getPage());
            setPosition(value.getPosition());
            setOwner(value.getOwner());
            setParameter(value.getParameter());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public XMenuMyRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
