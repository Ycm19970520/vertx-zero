/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ambient.domain.tables.pojos;


import cn.vertxup.ambient.domain.tables.interfaces.IXEmailServer;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XEmailServer implements VertxPojo, IXEmailServer {

    private static final long serialVersionUID = 1L;

    private String        key;
    private String        name;
    private String        ipV4;
    private String        ipV6;
    private String        hostname;
    private Integer       port;
    private String        protocol;
    private String        sender;
    private String        password;
    private String        emailConfig;
    private String        appId;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public XEmailServer() {}

    public XEmailServer(IXEmailServer value) {
        this.key = value.getKey();
        this.name = value.getName();
        this.ipV4 = value.getIpV4();
        this.ipV6 = value.getIpV6();
        this.hostname = value.getHostname();
        this.port = value.getPort();
        this.protocol = value.getProtocol();
        this.sender = value.getSender();
        this.password = value.getPassword();
        this.emailConfig = value.getEmailConfig();
        this.appId = value.getAppId();
        this.active = value.getActive();
        this.sigma = value.getSigma();
        this.metadata = value.getMetadata();
        this.language = value.getLanguage();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public XEmailServer(
        String        key,
        String        name,
        String        ipV4,
        String        ipV6,
        String        hostname,
        Integer       port,
        String        protocol,
        String        sender,
        String        password,
        String        emailConfig,
        String        appId,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.name = name;
        this.ipV4 = ipV4;
        this.ipV6 = ipV6;
        this.hostname = hostname;
        this.port = port;
        this.protocol = protocol;
        this.sender = sender;
        this.password = password;
        this.emailConfig = emailConfig;
        this.appId = appId;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

        public XEmailServer(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.KEY</code>. 「key」- 邮件服务器主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.KEY</code>. 「key」- 邮件服务器主键
     */
    @Override
    public XEmailServer setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.NAME</code>. 「name」- 邮件服务器名称
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.NAME</code>. 「name」- 邮件服务器名称
     */
    @Override
    public XEmailServer setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.IP_V4</code>. 「ipV4」- IP v4地址
     */
    @Override
    public String getIpV4() {
        return this.ipV4;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.IP_V4</code>. 「ipV4」- IP v4地址
     */
    @Override
    public XEmailServer setIpV4(String ipV4) {
        this.ipV4 = ipV4;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.IP_V6</code>. 「ipV6」- IP v6地址
     */
    @Override
    public String getIpV6() {
        return this.ipV6;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.IP_V6</code>. 「ipV6」- IP v6地址
     */
    @Override
    public XEmailServer setIpV6(String ipV6) {
        this.ipV6 = ipV6;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.HOSTNAME</code>. 「hostname」-
     * 主机地址
     */
    @Override
    public String getHostname() {
        return this.hostname;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.HOSTNAME</code>. 「hostname」-
     * 主机地址
     */
    @Override
    public XEmailServer setHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.PORT</code>. 「port」- 端口号
     */
    @Override
    public Integer getPort() {
        return this.port;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.PORT</code>. 「port」- 端口号
     */
    @Override
    public XEmailServer setPort(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.PROTOCOL</code>.
     * 「protocol」协议类型,POP3, STMP 等
     */
    @Override
    public String getProtocol() {
        return this.protocol;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.PROTOCOL</code>.
     * 「protocol」协议类型,POP3, STMP 等
     */
    @Override
    public XEmailServer setProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.SENDER</code>. 「sender」- 发送者账号
     */
    @Override
    public String getSender() {
        return this.sender;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.SENDER</code>. 「sender」- 发送者账号
     */
    @Override
    public XEmailServer setSender(String sender) {
        this.sender = sender;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.PASSWORD</code>. 「password」-
     * 口令
     */
    @Override
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.PASSWORD</code>. 「password」-
     * 口令
     */
    @Override
    public XEmailServer setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.EMAIL_CONFIG</code>.
     * 「emailConfig」- 连接字符串中的配置key=value
     */
    @Override
    public String getEmailConfig() {
        return this.emailConfig;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.EMAIL_CONFIG</code>.
     * 「emailConfig」- 连接字符串中的配置key=value
     */
    @Override
    public XEmailServer setEmailConfig(String emailConfig) {
        this.emailConfig = emailConfig;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.APP_ID</code>. 「appId」- 所属应用ID
     */
    @Override
    public String getAppId() {
        return this.appId;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.APP_ID</code>. 「appId」- 所属应用ID
     */
    @Override
    public XEmailServer setAppId(String appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XEmailServer setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XEmailServer setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public XEmailServer setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public XEmailServer setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public XEmailServer setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public XEmailServer setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public XEmailServer setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_EMAIL_SERVER.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_EMAIL_SERVER.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public XEmailServer setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("XEmailServer (");

        sb.append(key);
        sb.append(", ").append(name);
        sb.append(", ").append(ipV4);
        sb.append(", ").append(ipV6);
        sb.append(", ").append(hostname);
        sb.append(", ").append(port);
        sb.append(", ").append(protocol);
        sb.append(", ").append(sender);
        sb.append(", ").append(password);
        sb.append(", ").append(emailConfig);
        sb.append(", ").append(appId);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IXEmailServer from) {
        setKey(from.getKey());
        setName(from.getName());
        setIpV4(from.getIpV4());
        setIpV6(from.getIpV6());
        setHostname(from.getHostname());
        setPort(from.getPort());
        setProtocol(from.getProtocol());
        setSender(from.getSender());
        setPassword(from.getPassword());
        setEmailConfig(from.getEmailConfig());
        setAppId(from.getAppId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IXEmailServer> E into(E into) {
        into.from(this);
        return into;
    }
}
