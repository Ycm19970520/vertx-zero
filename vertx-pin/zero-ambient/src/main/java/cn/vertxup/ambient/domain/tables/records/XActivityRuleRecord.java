/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ambient.domain.tables.records;


import cn.vertxup.ambient.domain.tables.XActivityRule;
import cn.vertxup.ambient.domain.tables.interfaces.IXActivityRule;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class XActivityRuleRecord extends UpdatableRecordImpl<XActivityRuleRecord> implements VertxPojo, Record22<String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IXActivityRule {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.KEY</code>. 「key」- 规则主键
     */
    @Override
    public XActivityRuleRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.KEY</code>. 「key」- 规则主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.DEFINITION_KEY</code>.
     * 「definitionKey」- 流程对应的 definitionKey，用于查询所有规则用
     */
    @Override
    public XActivityRuleRecord setDefinitionKey(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.DEFINITION_KEY</code>.
     * 「definitionKey」- 流程对应的 definitionKey，用于查询所有规则用
     */
    @Override
    public String getDefinitionKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.TASK_KEY</code>. 「taskKey」-
     * 和待办绑定的taskKey
     */
    @Override
    public XActivityRuleRecord setTaskKey(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.TASK_KEY</code>. 「taskKey」-
     * 和待办绑定的taskKey
     */
    @Override
    public String getTaskKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.TYPE</code>. 「type」- 规则类型
     */
    @Override
    public XActivityRuleRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.TYPE</code>. 「type」- 规则类型
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_NAME</code>. 「ruleName」-
     * 规则名称，如果 type = ATOM 时读取，并设置到 typeName 中
     */
    @Override
    public XActivityRuleRecord setRuleName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_NAME</code>. 「ruleName」-
     * 规则名称，如果 type = ATOM 时读取，并设置到 typeName 中
     */
    @Override
    public String getRuleName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_IDENTIFIER</code>.
     * 「ruleIdentifier」- 主模型ID
     */
    @Override
    public XActivityRuleRecord setRuleIdentifier(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_IDENTIFIER</code>.
     * 「ruleIdentifier」- 主模型ID
     */
    @Override
    public String getRuleIdentifier() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_FIELD</code>.
     * 「ruleField」- 主字段名
     */
    @Override
    public XActivityRuleRecord setRuleField(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_FIELD</code>.
     * 「ruleField」- 主字段名
     */
    @Override
    public String getRuleField() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_EXPRESSION</code>.
     * 「ruleExpression」- 规则触发表达式 ( 可以是多个，JsonArray格式 )
     */
    @Override
    public XActivityRuleRecord setRuleExpression(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_EXPRESSION</code>.
     * 「ruleExpression」- 规则触发表达式 ( 可以是多个，JsonArray格式 )
     */
    @Override
    public String getRuleExpression() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_TPL</code>. 「ruleTpl」-
     * 参数模板专用，JsonObject结构
     */
    @Override
    public XActivityRuleRecord setRuleTpl(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_TPL</code>. 「ruleTpl」-
     * 参数模板专用，JsonObject结构
     */
    @Override
    public String getRuleTpl() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_CONFIG</code>.
     * 「ruleConfig」- 规则对应的额外配置
     */
    @Override
    public XActivityRuleRecord setRuleConfig(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_CONFIG</code>.
     * 「ruleConfig」- 规则对应的额外配置
     */
    @Override
    public String getRuleConfig() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_MESSAGE</code>.
     * 「ruleMessage」- 输出消息专用, Ut.fromExpression解析（特殊解析）
     */
    @Override
    public XActivityRuleRecord setRuleMessage(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.RULE_MESSAGE</code>.
     * 「ruleMessage」- 输出消息专用, Ut.fromExpression解析（特殊解析）
     */
    @Override
    public String getRuleMessage() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.HOOK_COMPONENT</code>.
     * 「hookComponent」-- 回调钩子组件
     */
    @Override
    public XActivityRuleRecord setHookComponent(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.HOOK_COMPONENT</code>.
     * 「hookComponent」-- 回调钩子组件
     */
    @Override
    public String getHookComponent() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.HOOK_CONFIG</code>.
     * 「hookConfig」-- 回调钩子组件配置
     */
    @Override
    public XActivityRuleRecord setHookConfig(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.HOOK_CONFIG</code>.
     * 「hookConfig」-- 回调钩子组件配置
     */
    @Override
    public String getHookConfig() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.LOGGING</code>. 「logging」-
     * 是否记录日志
     */
    @Override
    public XActivityRuleRecord setLogging(Boolean value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.LOGGING</code>. 「logging」-
     * 是否记录日志
     */
    @Override
    public Boolean getLogging() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XActivityRuleRecord setActive(Boolean value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XActivityRuleRecord setSigma(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public XActivityRuleRecord setMetadata(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public XActivityRuleRecord setLanguage(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public XActivityRuleRecord setCreatedAt(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public XActivityRuleRecord setCreatedBy(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public XActivityRuleRecord setUpdatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY_RULE.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public XActivityRuleRecord setUpdatedBy(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY_RULE.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(21);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row22<String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    @Override
    public Row22<String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row22) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return XActivityRule.X_ACTIVITY_RULE.KEY;
    }

    @Override
    public Field<String> field2() {
        return XActivityRule.X_ACTIVITY_RULE.DEFINITION_KEY;
    }

    @Override
    public Field<String> field3() {
        return XActivityRule.X_ACTIVITY_RULE.TASK_KEY;
    }

    @Override
    public Field<String> field4() {
        return XActivityRule.X_ACTIVITY_RULE.TYPE;
    }

    @Override
    public Field<String> field5() {
        return XActivityRule.X_ACTIVITY_RULE.RULE_NAME;
    }

    @Override
    public Field<String> field6() {
        return XActivityRule.X_ACTIVITY_RULE.RULE_IDENTIFIER;
    }

    @Override
    public Field<String> field7() {
        return XActivityRule.X_ACTIVITY_RULE.RULE_FIELD;
    }

    @Override
    public Field<String> field8() {
        return XActivityRule.X_ACTIVITY_RULE.RULE_EXPRESSION;
    }

    @Override
    public Field<String> field9() {
        return XActivityRule.X_ACTIVITY_RULE.RULE_TPL;
    }

    @Override
    public Field<String> field10() {
        return XActivityRule.X_ACTIVITY_RULE.RULE_CONFIG;
    }

    @Override
    public Field<String> field11() {
        return XActivityRule.X_ACTIVITY_RULE.RULE_MESSAGE;
    }

    @Override
    public Field<String> field12() {
        return XActivityRule.X_ACTIVITY_RULE.HOOK_COMPONENT;
    }

    @Override
    public Field<String> field13() {
        return XActivityRule.X_ACTIVITY_RULE.HOOK_CONFIG;
    }

    @Override
    public Field<Boolean> field14() {
        return XActivityRule.X_ACTIVITY_RULE.LOGGING;
    }

    @Override
    public Field<Boolean> field15() {
        return XActivityRule.X_ACTIVITY_RULE.ACTIVE;
    }

    @Override
    public Field<String> field16() {
        return XActivityRule.X_ACTIVITY_RULE.SIGMA;
    }

    @Override
    public Field<String> field17() {
        return XActivityRule.X_ACTIVITY_RULE.METADATA;
    }

    @Override
    public Field<String> field18() {
        return XActivityRule.X_ACTIVITY_RULE.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field19() {
        return XActivityRule.X_ACTIVITY_RULE.CREATED_AT;
    }

    @Override
    public Field<String> field20() {
        return XActivityRule.X_ACTIVITY_RULE.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field21() {
        return XActivityRule.X_ACTIVITY_RULE.UPDATED_AT;
    }

    @Override
    public Field<String> field22() {
        return XActivityRule.X_ACTIVITY_RULE.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getDefinitionKey();
    }

    @Override
    public String component3() {
        return getTaskKey();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getRuleName();
    }

    @Override
    public String component6() {
        return getRuleIdentifier();
    }

    @Override
    public String component7() {
        return getRuleField();
    }

    @Override
    public String component8() {
        return getRuleExpression();
    }

    @Override
    public String component9() {
        return getRuleTpl();
    }

    @Override
    public String component10() {
        return getRuleConfig();
    }

    @Override
    public String component11() {
        return getRuleMessage();
    }

    @Override
    public String component12() {
        return getHookComponent();
    }

    @Override
    public String component13() {
        return getHookConfig();
    }

    @Override
    public Boolean component14() {
        return getLogging();
    }

    @Override
    public Boolean component15() {
        return getActive();
    }

    @Override
    public String component16() {
        return getSigma();
    }

    @Override
    public String component17() {
        return getMetadata();
    }

    @Override
    public String component18() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component19() {
        return getCreatedAt();
    }

    @Override
    public String component20() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component21() {
        return getUpdatedAt();
    }

    @Override
    public String component22() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getDefinitionKey();
    }

    @Override
    public String value3() {
        return getTaskKey();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getRuleName();
    }

    @Override
    public String value6() {
        return getRuleIdentifier();
    }

    @Override
    public String value7() {
        return getRuleField();
    }

    @Override
    public String value8() {
        return getRuleExpression();
    }

    @Override
    public String value9() {
        return getRuleTpl();
    }

    @Override
    public String value10() {
        return getRuleConfig();
    }

    @Override
    public String value11() {
        return getRuleMessage();
    }

    @Override
    public String value12() {
        return getHookComponent();
    }

    @Override
    public String value13() {
        return getHookConfig();
    }

    @Override
    public Boolean value14() {
        return getLogging();
    }

    @Override
    public Boolean value15() {
        return getActive();
    }

    @Override
    public String value16() {
        return getSigma();
    }

    @Override
    public String value17() {
        return getMetadata();
    }

    @Override
    public String value18() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value19() {
        return getCreatedAt();
    }

    @Override
    public String value20() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value21() {
        return getUpdatedAt();
    }

    @Override
    public String value22() {
        return getUpdatedBy();
    }

    @Override
    public XActivityRuleRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value2(String value) {
        setDefinitionKey(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value3(String value) {
        setTaskKey(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value5(String value) {
        setRuleName(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value6(String value) {
        setRuleIdentifier(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value7(String value) {
        setRuleField(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value8(String value) {
        setRuleExpression(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value9(String value) {
        setRuleTpl(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value10(String value) {
        setRuleConfig(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value11(String value) {
        setRuleMessage(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value12(String value) {
        setHookComponent(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value13(String value) {
        setHookConfig(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value14(Boolean value) {
        setLogging(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value15(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value16(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value17(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value18(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value19(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value20(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value21(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public XActivityRuleRecord value22(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public XActivityRuleRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, Boolean value14, Boolean value15, String value16, String value17, String value18, LocalDateTime value19, String value20, LocalDateTime value21, String value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IXActivityRule from) {
        setKey(from.getKey());
        setDefinitionKey(from.getDefinitionKey());
        setTaskKey(from.getTaskKey());
        setType(from.getType());
        setRuleName(from.getRuleName());
        setRuleIdentifier(from.getRuleIdentifier());
        setRuleField(from.getRuleField());
        setRuleExpression(from.getRuleExpression());
        setRuleTpl(from.getRuleTpl());
        setRuleConfig(from.getRuleConfig());
        setRuleMessage(from.getRuleMessage());
        setHookComponent(from.getHookComponent());
        setHookConfig(from.getHookConfig());
        setLogging(from.getLogging());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IXActivityRule> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XActivityRuleRecord
     */
    public XActivityRuleRecord() {
        super(XActivityRule.X_ACTIVITY_RULE);
    }

    /**
     * Create a detached, initialised XActivityRuleRecord
     */
    public XActivityRuleRecord(String key, String definitionKey, String taskKey, String type, String ruleName, String ruleIdentifier, String ruleField, String ruleExpression, String ruleTpl, String ruleConfig, String ruleMessage, String hookComponent, String hookConfig, Boolean logging, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(XActivityRule.X_ACTIVITY_RULE);

        setKey(key);
        setDefinitionKey(definitionKey);
        setTaskKey(taskKey);
        setType(type);
        setRuleName(ruleName);
        setRuleIdentifier(ruleIdentifier);
        setRuleField(ruleField);
        setRuleExpression(ruleExpression);
        setRuleTpl(ruleTpl);
        setRuleConfig(ruleConfig);
        setRuleMessage(ruleMessage);
        setHookComponent(hookComponent);
        setHookConfig(hookConfig);
        setLogging(logging);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised XActivityRuleRecord
     */
    public XActivityRuleRecord(cn.vertxup.ambient.domain.tables.pojos.XActivityRule value) {
        super(XActivityRule.X_ACTIVITY_RULE);

        if (value != null) {
            setKey(value.getKey());
            setDefinitionKey(value.getDefinitionKey());
            setTaskKey(value.getTaskKey());
            setType(value.getType());
            setRuleName(value.getRuleName());
            setRuleIdentifier(value.getRuleIdentifier());
            setRuleField(value.getRuleField());
            setRuleExpression(value.getRuleExpression());
            setRuleTpl(value.getRuleTpl());
            setRuleConfig(value.getRuleConfig());
            setRuleMessage(value.getRuleMessage());
            setHookComponent(value.getHookComponent());
            setHookConfig(value.getHookConfig());
            setLogging(value.getLogging());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

    public XActivityRuleRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
