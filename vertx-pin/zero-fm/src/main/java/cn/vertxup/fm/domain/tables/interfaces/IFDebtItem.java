/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.fm.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IFDebtItem extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.KEY</code>. 「key」- 收款明细账单主键ID
     */
    public IFDebtItem setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.KEY</code>. 「key」- 收款明细账单主键ID
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.NAME</code>. 「name」 - 收款明细单标题
     */
    public IFDebtItem setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.NAME</code>. 「name」 - 收款明细单标题
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.CODE</code>. 「code」 - 收款明细单编号
     */
    public IFDebtItem setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.CODE</code>. 「code」 - 收款明细单编号
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.SERIAL</code>. 「serial」 - 收款明细单据号
     */
    public IFDebtItem setSerial(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.SERIAL</code>. 「serial」 - 收款明细单据号
     */
    public String getSerial();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    public IFDebtItem setAmount(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    public BigDecimal getAmount();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.DEBT_ID</code>. 「debtId」应收账单ID
     */
    public IFDebtItem setDebtId(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.DEBT_ID</code>. 「debtId」应收账单ID
     */
    public String getDebtId();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.PAYMENT_ID</code>.
     * 「paymentId」收款单ID
     */
    public IFDebtItem setPaymentId(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.PAYMENT_ID</code>.
     * 「paymentId」收款单ID
     */
    public String getPaymentId();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.SIGMA</code>. 「sigma」- 统一标识
     */
    public IFDebtItem setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public IFDebtItem setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.ACTIVE</code>. 「active」- 是否启用
     */
    public IFDebtItem setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    public IFDebtItem setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public IFDebtItem setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    public IFDebtItem setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public IFDebtItem setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.F_DEBT_ITEM.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    public IFDebtItem setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_DEBT_ITEM.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IFDebtItem
     */
    public void from(IFDebtItem from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IFDebtItem
     */
    public <E extends IFDebtItem> E into(E into);

        @Override
        public default IFDebtItem fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setSerial,json::getString,"SERIAL","java.lang.String");
                // Omitting unrecognized type java.math.BigDecimal for column AMOUNT!
                setOrThrow(this::setDebtId,json::getString,"DEBT_ID","java.lang.String");
                setOrThrow(this::setPaymentId,json::getString,"PAYMENT_ID","java.lang.String");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("SERIAL",getSerial());
                // Omitting unrecognized type java.math.BigDecimal for column AMOUNT!
                json.put("DEBT_ID",getDebtId());
                json.put("PAYMENT_ID",getPaymentId());
                json.put("SIGMA",getSigma());
                json.put("LANGUAGE",getLanguage());
                json.put("ACTIVE",getActive());
                json.put("METADATA",getMetadata());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
