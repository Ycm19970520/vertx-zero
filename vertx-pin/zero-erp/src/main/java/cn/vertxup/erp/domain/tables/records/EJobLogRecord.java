/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.erp.domain.tables.records;


import cn.vertxup.erp.domain.tables.EJobLog;
import cn.vertxup.erp.domain.tables.interfaces.IEJobLog;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EJobLogRecord extends UpdatableRecordImpl<EJobLogRecord> implements VertxPojo, Record19<String, String, String, String, String, LocalDateTime, String, String, String, String, String, String, Boolean, String, String, LocalDateTime, String, LocalDateTime, String>, IEJobLog {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.KEY</code>. 「key」- 记录主键
     */
    @Override
    public EJobLogRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.KEY</code>. 「key」- 记录主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.NAME</code>. 「name」- 记录名称
     */
    @Override
    public EJobLogRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.NAME</code>. 「name」- 记录名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.SERIAL</code>. 「serial」- 记录序号
     */
    @Override
    public EJobLogRecord setSerial(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.SERIAL</code>. 「serial」- 记录序号
     */
    @Override
    public String getSerial() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.TYPE</code>. 「type」- 记录类型：考勤 / 培训 /
     * 休假 / 驻场等
     */
    @Override
    public EJobLogRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.TYPE</code>. 「type」- 记录类型：考勤 / 培训 /
     * 休假 / 驻场等
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.COMMENT</code>. 「comment」- 记录备注
     */
    @Override
    public EJobLogRecord setComment(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.COMMENT</code>. 「comment」- 记录备注
     */
    @Override
    public String getComment() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.LOG_AT</code>. 「logAt」- 记录时间
     */
    @Override
    public EJobLogRecord setLogAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.LOG_AT</code>. 「logAt」- 记录时间
     */
    @Override
    public LocalDateTime getLogAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.LOG_BY</code>. 「logBy」-
     * 记录人（只能自己记录，所以记录人就是所属人）
     */
    @Override
    public EJobLogRecord setLogBy(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.LOG_BY</code>. 「logBy」-
     * 记录人（只能自己记录，所以记录人就是所属人）
     */
    @Override
    public String getLogBy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.LOG_NAME</code>. 「logName」- 记录人姓名
     */
    @Override
    public EJobLogRecord setLogName(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.LOG_NAME</code>. 「logName」- 记录人姓名
     */
    @Override
    public String getLogName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.TODO_ID</code>. 「todoId」-
     * 所属Todo主键，关联到主任务！
     */
    @Override
    public EJobLogRecord setTodoId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.TODO_ID</code>. 「todoId」-
     * 所属Todo主键，关联到主任务！
     */
    @Override
    public String getTodoId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.COMPANY_ID</code>. 「companyId」-
     * 所属公司
     */
    @Override
    public EJobLogRecord setCompanyId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.COMPANY_ID</code>. 「companyId」-
     * 所属公司
     */
    @Override
    public String getCompanyId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.STATUS</code>. 「status」- 记录状态
     */
    @Override
    public EJobLogRecord setStatus(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.STATUS</code>. 「status」- 记录状态
     */
    @Override
    public String getStatus() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public EJobLogRecord setMetadata(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public EJobLogRecord setActive(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public EJobLogRecord setSigma(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public EJobLogRecord setLanguage(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public EJobLogRecord setCreatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public EJobLogRecord setCreatedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public EJobLogRecord setUpdatedAt(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_JOB_LOG.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public EJobLogRecord setUpdatedBy(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_JOB_LOG.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row19<String, String, String, String, String, LocalDateTime, String, String, String, String, String, String, Boolean, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    @Override
    public Row19<String, String, String, String, String, LocalDateTime, String, String, String, String, String, String, Boolean, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row19) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return EJobLog.E_JOB_LOG.KEY;
    }

    @Override
    public Field<String> field2() {
        return EJobLog.E_JOB_LOG.NAME;
    }

    @Override
    public Field<String> field3() {
        return EJobLog.E_JOB_LOG.SERIAL;
    }

    @Override
    public Field<String> field4() {
        return EJobLog.E_JOB_LOG.TYPE;
    }

    @Override
    public Field<String> field5() {
        return EJobLog.E_JOB_LOG.COMMENT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return EJobLog.E_JOB_LOG.LOG_AT;
    }

    @Override
    public Field<String> field7() {
        return EJobLog.E_JOB_LOG.LOG_BY;
    }

    @Override
    public Field<String> field8() {
        return EJobLog.E_JOB_LOG.LOG_NAME;
    }

    @Override
    public Field<String> field9() {
        return EJobLog.E_JOB_LOG.TODO_ID;
    }

    @Override
    public Field<String> field10() {
        return EJobLog.E_JOB_LOG.COMPANY_ID;
    }

    @Override
    public Field<String> field11() {
        return EJobLog.E_JOB_LOG.STATUS;
    }

    @Override
    public Field<String> field12() {
        return EJobLog.E_JOB_LOG.METADATA;
    }

    @Override
    public Field<Boolean> field13() {
        return EJobLog.E_JOB_LOG.ACTIVE;
    }

    @Override
    public Field<String> field14() {
        return EJobLog.E_JOB_LOG.SIGMA;
    }

    @Override
    public Field<String> field15() {
        return EJobLog.E_JOB_LOG.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return EJobLog.E_JOB_LOG.CREATED_AT;
    }

    @Override
    public Field<String> field17() {
        return EJobLog.E_JOB_LOG.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field18() {
        return EJobLog.E_JOB_LOG.UPDATED_AT;
    }

    @Override
    public Field<String> field19() {
        return EJobLog.E_JOB_LOG.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getSerial();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getComment();
    }

    @Override
    public LocalDateTime component6() {
        return getLogAt();
    }

    @Override
    public String component7() {
        return getLogBy();
    }

    @Override
    public String component8() {
        return getLogName();
    }

    @Override
    public String component9() {
        return getTodoId();
    }

    @Override
    public String component10() {
        return getCompanyId();
    }

    @Override
    public String component11() {
        return getStatus();
    }

    @Override
    public String component12() {
        return getMetadata();
    }

    @Override
    public Boolean component13() {
        return getActive();
    }

    @Override
    public String component14() {
        return getSigma();
    }

    @Override
    public String component15() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component16() {
        return getCreatedAt();
    }

    @Override
    public String component17() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component18() {
        return getUpdatedAt();
    }

    @Override
    public String component19() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getSerial();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getComment();
    }

    @Override
    public LocalDateTime value6() {
        return getLogAt();
    }

    @Override
    public String value7() {
        return getLogBy();
    }

    @Override
    public String value8() {
        return getLogName();
    }

    @Override
    public String value9() {
        return getTodoId();
    }

    @Override
    public String value10() {
        return getCompanyId();
    }

    @Override
    public String value11() {
        return getStatus();
    }

    @Override
    public String value12() {
        return getMetadata();
    }

    @Override
    public Boolean value13() {
        return getActive();
    }

    @Override
    public String value14() {
        return getSigma();
    }

    @Override
    public String value15() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value16() {
        return getCreatedAt();
    }

    @Override
    public String value17() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value18() {
        return getUpdatedAt();
    }

    @Override
    public String value19() {
        return getUpdatedBy();
    }

    @Override
    public EJobLogRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public EJobLogRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public EJobLogRecord value3(String value) {
        setSerial(value);
        return this;
    }

    @Override
    public EJobLogRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public EJobLogRecord value5(String value) {
        setComment(value);
        return this;
    }

    @Override
    public EJobLogRecord value6(LocalDateTime value) {
        setLogAt(value);
        return this;
    }

    @Override
    public EJobLogRecord value7(String value) {
        setLogBy(value);
        return this;
    }

    @Override
    public EJobLogRecord value8(String value) {
        setLogName(value);
        return this;
    }

    @Override
    public EJobLogRecord value9(String value) {
        setTodoId(value);
        return this;
    }

    @Override
    public EJobLogRecord value10(String value) {
        setCompanyId(value);
        return this;
    }

    @Override
    public EJobLogRecord value11(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public EJobLogRecord value12(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public EJobLogRecord value13(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public EJobLogRecord value14(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public EJobLogRecord value15(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public EJobLogRecord value16(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public EJobLogRecord value17(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public EJobLogRecord value18(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public EJobLogRecord value19(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public EJobLogRecord values(String value1, String value2, String value3, String value4, String value5, LocalDateTime value6, String value7, String value8, String value9, String value10, String value11, String value12, Boolean value13, String value14, String value15, LocalDateTime value16, String value17, LocalDateTime value18, String value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IEJobLog from) {
        setKey(from.getKey());
        setName(from.getName());
        setSerial(from.getSerial());
        setType(from.getType());
        setComment(from.getComment());
        setLogAt(from.getLogAt());
        setLogBy(from.getLogBy());
        setLogName(from.getLogName());
        setTodoId(from.getTodoId());
        setCompanyId(from.getCompanyId());
        setStatus(from.getStatus());
        setMetadata(from.getMetadata());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IEJobLog> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EJobLogRecord
     */
    public EJobLogRecord() {
        super(EJobLog.E_JOB_LOG);
    }

    /**
     * Create a detached, initialised EJobLogRecord
     */
    public EJobLogRecord(String key, String name, String serial, String type, String comment, LocalDateTime logAt, String logBy, String logName, String todoId, String companyId, String status, String metadata, Boolean active, String sigma, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(EJobLog.E_JOB_LOG);

        setKey(key);
        setName(name);
        setSerial(serial);
        setType(type);
        setComment(comment);
        setLogAt(logAt);
        setLogBy(logBy);
        setLogName(logName);
        setTodoId(todoId);
        setCompanyId(companyId);
        setStatus(status);
        setMetadata(metadata);
        setActive(active);
        setSigma(sigma);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised EJobLogRecord
     */
    public EJobLogRecord(cn.vertxup.erp.domain.tables.pojos.EJobLog value) {
        super(EJobLog.E_JOB_LOG);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setSerial(value.getSerial());
            setType(value.getType());
            setComment(value.getComment());
            setLogAt(value.getLogAt());
            setLogBy(value.getLogBy());
            setLogName(value.getLogName());
            setTodoId(value.getTodoId());
            setCompanyId(value.getCompanyId());
            setStatus(value.getStatus());
            setMetadata(value.getMetadata());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

    public EJobLogRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
