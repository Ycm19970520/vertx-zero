/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.erp.domain.tables.records;


import cn.vertxup.erp.domain.tables.EProject;
import cn.vertxup.erp.domain.tables.interfaces.IEProject;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EProjectRecord extends UpdatableRecordImpl<EProjectRecord> implements VertxPojo, Record17<String, String, String, String, String, String, String, String, String, String, Boolean, String, String, LocalDateTime, String, LocalDateTime, String>, IEProject {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.KEY</code>. 「key」- 项目ID
     */
    @Override
    public EProjectRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.KEY</code>. 「key」- 项目ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.NAME</code>. 「name」- 项目名称
     */
    @Override
    public EProjectRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.NAME</code>. 「name」- 项目名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.CODE</code>. 「code」- 项目编号
     */
    @Override
    public EProjectRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.CODE</code>. 「code」- 项目编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.TYPE</code>. 「type」-
     * 项目分类（不同类型代表不同项目）
     */
    @Override
    public EProjectRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.TYPE</code>. 「type」-
     * 项目分类（不同类型代表不同项目）
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.STATUS</code>. 「status」- 项目状态
     */
    @Override
    public EProjectRecord setStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.STATUS</code>. 「status」- 项目状态
     */
    @Override
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.TITLE</code>. 「title」- 主单业务标题
     */
    @Override
    public EProjectRecord setTitle(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.TITLE</code>. 「title」- 主单业务标题
     */
    @Override
    public String getTitle() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.ICON</code>. 「icon」- 项目图标
     */
    @Override
    public EProjectRecord setIcon(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.ICON</code>. 「icon」- 项目图标
     */
    @Override
    public String getIcon() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.DESCRIPTION</code>. 「description」-
     * 主单描述内容
     */
    @Override
    public EProjectRecord setDescription(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.DESCRIPTION</code>. 「description」-
     * 主单描述内容
     */
    @Override
    public String getDescription() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.LEAD_BY</code>. 「leadBy」- 项目经理
     */
    @Override
    public EProjectRecord setLeadBy(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.LEAD_BY</code>. 「leadBy」- 项目经理
     */
    @Override
    public String getLeadBy() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public EProjectRecord setMetadata(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public EProjectRecord setActive(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.SIGMA</code>. 「sigma」- 统一标识（项目所属应用）
     */
    @Override
    public EProjectRecord setSigma(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.SIGMA</code>. 「sigma」- 统一标识（项目所属应用）
     */
    @Override
    public String getSigma() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public EProjectRecord setLanguage(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public EProjectRecord setCreatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public EProjectRecord setCreatedBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public EProjectRecord setUpdatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.E_PROJECT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public EProjectRecord setUpdatedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.E_PROJECT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<String, String, String, String, String, String, String, String, String, String, Boolean, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<String, String, String, String, String, String, String, String, String, String, Boolean, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return EProject.E_PROJECT.KEY;
    }

    @Override
    public Field<String> field2() {
        return EProject.E_PROJECT.NAME;
    }

    @Override
    public Field<String> field3() {
        return EProject.E_PROJECT.CODE;
    }

    @Override
    public Field<String> field4() {
        return EProject.E_PROJECT.TYPE;
    }

    @Override
    public Field<String> field5() {
        return EProject.E_PROJECT.STATUS;
    }

    @Override
    public Field<String> field6() {
        return EProject.E_PROJECT.TITLE;
    }

    @Override
    public Field<String> field7() {
        return EProject.E_PROJECT.ICON;
    }

    @Override
    public Field<String> field8() {
        return EProject.E_PROJECT.DESCRIPTION;
    }

    @Override
    public Field<String> field9() {
        return EProject.E_PROJECT.LEAD_BY;
    }

    @Override
    public Field<String> field10() {
        return EProject.E_PROJECT.METADATA;
    }

    @Override
    public Field<Boolean> field11() {
        return EProject.E_PROJECT.ACTIVE;
    }

    @Override
    public Field<String> field12() {
        return EProject.E_PROJECT.SIGMA;
    }

    @Override
    public Field<String> field13() {
        return EProject.E_PROJECT.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return EProject.E_PROJECT.CREATED_AT;
    }

    @Override
    public Field<String> field15() {
        return EProject.E_PROJECT.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return EProject.E_PROJECT.UPDATED_AT;
    }

    @Override
    public Field<String> field17() {
        return EProject.E_PROJECT.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getTitle();
    }

    @Override
    public String component7() {
        return getIcon();
    }

    @Override
    public String component8() {
        return getDescription();
    }

    @Override
    public String component9() {
        return getLeadBy();
    }

    @Override
    public String component10() {
        return getMetadata();
    }

    @Override
    public Boolean component11() {
        return getActive();
    }

    @Override
    public String component12() {
        return getSigma();
    }

    @Override
    public String component13() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component14() {
        return getCreatedAt();
    }

    @Override
    public String component15() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component16() {
        return getUpdatedAt();
    }

    @Override
    public String component17() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getTitle();
    }

    @Override
    public String value7() {
        return getIcon();
    }

    @Override
    public String value8() {
        return getDescription();
    }

    @Override
    public String value9() {
        return getLeadBy();
    }

    @Override
    public String value10() {
        return getMetadata();
    }

    @Override
    public Boolean value11() {
        return getActive();
    }

    @Override
    public String value12() {
        return getSigma();
    }

    @Override
    public String value13() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value14() {
        return getCreatedAt();
    }

    @Override
    public String value15() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value16() {
        return getUpdatedAt();
    }

    @Override
    public String value17() {
        return getUpdatedBy();
    }

    @Override
    public EProjectRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public EProjectRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public EProjectRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public EProjectRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public EProjectRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public EProjectRecord value6(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public EProjectRecord value7(String value) {
        setIcon(value);
        return this;
    }

    @Override
    public EProjectRecord value8(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public EProjectRecord value9(String value) {
        setLeadBy(value);
        return this;
    }

    @Override
    public EProjectRecord value10(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public EProjectRecord value11(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public EProjectRecord value12(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public EProjectRecord value13(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public EProjectRecord value14(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public EProjectRecord value15(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public EProjectRecord value16(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public EProjectRecord value17(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public EProjectRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, Boolean value11, String value12, String value13, LocalDateTime value14, String value15, LocalDateTime value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IEProject from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setType(from.getType());
        setStatus(from.getStatus());
        setTitle(from.getTitle());
        setIcon(from.getIcon());
        setDescription(from.getDescription());
        setLeadBy(from.getLeadBy());
        setMetadata(from.getMetadata());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IEProject> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EProjectRecord
     */
    public EProjectRecord() {
        super(EProject.E_PROJECT);
    }

    /**
     * Create a detached, initialised EProjectRecord
     */
    public EProjectRecord(String key, String name, String code, String type, String status, String title, String icon, String description, String leadBy, String metadata, Boolean active, String sigma, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(EProject.E_PROJECT);

        setKey(key);
        setName(name);
        setCode(code);
        setType(type);
        setStatus(status);
        setTitle(title);
        setIcon(icon);
        setDescription(description);
        setLeadBy(leadBy);
        setMetadata(metadata);
        setActive(active);
        setSigma(sigma);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised EProjectRecord
     */
    public EProjectRecord(cn.vertxup.erp.domain.tables.pojos.EProject value) {
        super(EProject.E_PROJECT);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setType(value.getType());
            setStatus(value.getStatus());
            setTitle(value.getTitle());
            setIcon(value.getIcon());
            setDescription(value.getDescription());
            setLeadBy(value.getLeadBy());
            setMetadata(value.getMetadata());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public EProjectRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
